º
WC:\vicelulas\Back-end\Vicelulas\Vicelulas.Teste\APITeste\AutenticacaoControllerTeste.cs
	namespace 	
	Vicelulas
 
. 
Teste 
. 
APITeste "
{ 
public 

class '
AutenticacaoControllerTeste ,
{ 
[ 	
Fact	 
] 
public 
void 
RetornaStatusOkPost '
(' (
)( )
{ 	
int 
valorEsperado 
= 
$num  #
;# $
var 
login 
= 
new 

LoginInput &
{ 
Email 
= 
$str *
,* +
Senha 
= 
$str "
} 
; 
var 
repoMock 
= 
new 
Mock #
<# $ 
IAutenticacaoNegocio$ 8
>8 9
(9 :
): ;
;; <
var #
_autenticacaoController '
=( )
new* -"
AutenticacaoController. D
(D E
repoMockE M
.M N
ObjectN T
)T U
;U V
var"" 
actionResult"" 
="" #
_autenticacaoController"" 6
.""6 7
Entrar""7 =
(""= >
login""> C
)""C D
;""D E
var## 
okObjectResult## 
=##  
(##! "
OkObjectResult##" 0
)##0 1
actionResult##1 =
;##= >
Assert&& 
.&& 
Equal&& 
(&& 
valorEsperado&& &
,&&& '
okObjectResult&&( 6
.&&6 7

StatusCode&&7 A
)&&A B
;&&B C
}'' 	
}(( 
})) Ó
QC:\vicelulas\Back-end\Vicelulas\Vicelulas.Teste\APITeste\MentorControllerTeste.cs
	namespace 	
	Vicelulas
 
. 
Teste 
. 
APITeste "
{ 
public 

class !
MentorControllerTeste &
{ 
[ 	
Fact	 
] 
public 
void !
RetornaStatusOKGetAll )
() *
)* +
{ 	
int 
valorEsperado 
= 
$num  #
;# $
var 
repoMock 
= 
new 
Mock #
<# $
IMentorNegocio$ 2
>2 3
(3 4
)4 5
;5 6
repoMock 
. 
Setup 
( 
m 
=> 
m  !
.! "

Selecionar" ,
(, -
)- .
). /
./ 0
Returns0 7
(7 8
DbMock8 >
.> ?
Mentor? E
)E F
;F G
var 
_mentorController !
=" #
new$ '
MentorController( 8
(8 9
repoMock9 A
.A B
ObjectB H
)H I
;I J
var 
actionResult 
= 
_mentorController 0
.0 1
Get1 4
(4 5
)5 6
;6 7
var 
okObjectResult 
=  
(! "
OkObjectResult" 0
)0 1
actionResult1 =
;= >
Assert!! 
.!! 
Equal!! 
(!! 
valorEsperado!! &
,!!& '
okObjectResult!!( 6
.!!6 7

StatusCode!!7 A
)!!A B
;!!B C
}"" 	
}## 
}$$ Ì
PC:\vicelulas\Back-end\Vicelulas\Vicelulas.Teste\APITeste\PapelControllerTeste.cs
	namespace 	
	Vicelulas
 
. 
Teste 
. 
APITeste "
{ 
public 

class  
PapelControllerTeste %
{ 
[ 	
Fact	 
] 
public 
void !
RetornaStatusOKGetAll )
() *
)* +
{ 	
int 
valorEsperado 
= 
$num  #
;# $
var 
repoMock 
= 
new 
Mock #
<# $
IPapelNegocio$ 1
>1 2
(2 3
)3 4
;4 5
repoMock 
. 
Setup 
( 
m 
=> 
m  !
.! "

Selecionar" ,
(, -
)- .
). /
./ 0
Returns0 7
(7 8
DbMock8 >
.> ?
Papel? D
)D E
;E F
var 
_papelController  
=! "
new# &
PapelController' 6
(6 7
repoMock7 ?
.? @
Object@ F
)F G
;G H
var 
actionResult 
= 
_papelController /
./ 0
Get0 3
(3 4
)4 5
;5 6
var 
okObjectResult 
=  
(! "
OkObjectResult" 0
)0 1
actionResult1 =
;= >
Assert"" 
."" 
Equal"" 
("" 
valorEsperado"" &
,""& '
okObjectResult""( 6
.""6 7

StatusCode""7 A
)""A B
;""B C
}## 	
}$$ 
}%% Év
QC:\vicelulas\Back-end\Vicelulas\Vicelulas.Teste\APITeste\PessoaControllerTeste.cs
	namespace 	
	Vicelulas
 
. 
Teste 
. 
APITeste "
{ 
public 

class !
PessoaControllerTeste &
{ 
[ 	
Fact	 
] 
public 
void !
RetornaStatusOKGetAll )
() *
)* +
{ 	
int 
valorEsperado 
= 
$num  #
;# $
var 
repoMock 
= 
new 
Mock #
<# $
IPessoaNegocio$ 2
>2 3
(3 4
)4 5
;5 6
repoMock 
. 
Setup 
( 
m 
=> 
m  !
.! "

Selecionar" ,
(, -
)- .
). /
./ 0
Returns0 7
(7 8
DbMock8 >
.> ?
Pessoa? E
)E F
;F G
var 
_pessoaController !
=" #
new$ '
PessoaController( 8
(8 9
repoMock9 A
.A B
ObjectB H
)H I
;I J
var 
actionResult 
= 
_pessoaController 0
.0 1
Get1 4
(4 5
)5 6
;6 7
var 
okObjectResult 
=  
(! "
OkObjectResult" 0
)0 1
actionResult1 =
;= >
Assert"" 
."" 
Equal"" 
("" 
valorEsperado"" &
,""& '
okObjectResult""( 6
.""6 7

StatusCode""7 A
)""A B
;""B C
}## 	
[%% 	
Fact%%	 
]%% 
public&& 
void&&  
RetornaStatusOKGetId&& (
(&&( )
)&&) *
{'' 	
int** 
valorEsperado** 
=** 
$num**  #
;**# $
var,, 
pessoa,, 
=,, 
new,, 
	PessoaDto,, &
{-- 
Id.. 
=.. 
$num.. 
,.. 
Id_Papel// 
=// 
$num// 
,// 
Nome00 
=00 
$str00 &
,00& '
Email11 
=11 
$str11 *
,11* +
Cargo22 
=22 
$str22 $
,22$ %
Ativo33 
=33 
true33 
,33 
	Id_Squads44 
=44 
$num44 
,44 
Id_Tribo55 
=55 
$num55 
,55 

Id_Unidade66 
=66 
$num66 
,66 
	Permissao77 
=77 
$num77 
,77 
	SquadNome88 
=88 
$str88 (
,88( )
	TriboNome99 
=99 
$str99 &
,99& '
Unidade:: 
=:: 
$str:: *
};; 
;;; 
var== 
repoMock== 
=== 
new== 
Mock== #
<==# $
IPessoaNegocio==$ 2
>==2 3
(==3 4
)==4 5
;==5 6

Expression>> 
<>> 
Func>> 
<>> 
IPessoaNegocio>> *
,>>* +
	PessoaDto>>, 5
>>>5 6
>>>6 7
call>>8 <
=>>= >
x>>? @
=>>>A C
x>>D E
.>>E F
SelecionarPorId>>F U
(>>U V
pessoa>>V \
.>>\ ]
Id>>] _
)>>_ `
;>>` a
repoMock?? 
.?? 
Setup?? 
(?? 
call?? 
)??  
.??  !
Returns??! (
(??( )
pessoa??) /
)??/ 0
.??0 1

Verifiable??1 ;
(??; <
$str??< P
)??P Q
;??Q R
var@@ 
_pessoaController@@ !
=@@" #
new@@$ '
PessoaController@@( 8
(@@8 9
repoMock@@9 A
.@@A B
Object@@B H
)@@H I
;@@I J
varDD 
actionResultDD 
=DD 
_pessoaControllerDD 0
.DD0 1
GetIdDD1 6
(DD6 7
pessoaDD7 =
.DD= >
IdDD> @
)DD@ A
;DDA B
varEE 
okObjectResultEE 
=EE  
(EE! "
OkObjectResultEE" 0
)EE0 1
actionResultEE1 =
;EE= >
AssertHH 
.HH 
EqualHH 
(HH 
valorEsperadoHH &
,HH& '
okObjectResultHH( 6
.HH6 7

StatusCodeHH7 A
)HHA B
;HHB C
repoMockII 
.II 
VerifyII 
(II 
callII  
,II  !
TimesII" '
.II' (
OnceII( ,
)II, -
;II- .
}JJ 	
[LL 	
FactLL	 
]LL 
publicMM 
voidMM %
RetornaStatusOKGetIdSquadMM -
(MM- .
)MM. /
{NN 	
intPP 
valorEsperadoPP 
=PP 
$numPP  #
;PP# $
varRR 
IdSquadsRR 
=RR 
$numRR 
;RR 
varTT 
repoMockTT 
=TT 
newTT 
MockTT #
<TT# $
IPessoaNegocioTT$ 2
>TT2 3
(TT3 4
)TT4 5
;TT5 6

ExpressionUU 
<UU 
FuncUU 
<UU 
IPessoaNegocioUU *
,UU* +
IEnumerableUU, 7
<UU7 8
	PessoaDtoUU8 A
>UUA B
>UUB C
>UUC D
callUUE I
=UUJ K
xUUL M
=>UUN P
xUUQ R
.UUR S 
SelecionarPorIdSquadUUS g
(UUg h
IdSquadsUUh p
)UUp q
;UUq r
repoMockVV 
.VV 
SetupVV 
(VV 
callVV 
)VV  
.VV  !
ReturnsVV! (
(VV( )
DbMockVV) /
.VV/ 0
PessoaVV0 6
)VV6 7
.VV7 8

VerifiableVV8 B
(VVB C
$strVVC W
)VVW X
;VVX Y
varWW 
_pessoaControllerWW !
=WW" #
newWW$ '
PessoaControllerWW( 8
(WW8 9
repoMockWW9 A
.WWA B
ObjectWWB H
)WWH I
;WWI J
var[[ 
actionResult[[ 
=[[ 
_pessoaController[[ 0
.[[0 1

GetIdSquad[[1 ;
([[; <
IdSquads[[< D
)[[D E
;[[E F
var\\ 
okObjectResult\\ 
=\\  
(\\! "
OkObjectResult\\" 0
)\\0 1
actionResult\\1 =
;\\= >
Assert__ 
.__ 
Equal__ 
(__ 
valorEsperado__ &
,__& '
okObjectResult__( 6
.__6 7

StatusCode__7 A
)__A B
;__B C
repoMock`` 
.`` 
Verify`` 
(`` 
call``  
,``  !
Times``" '
.``' (
Once``( ,
)``, -
;``- .
}aa 	
[cc 	
Factcc	 
]cc 
publicdd 
voiddd "
RetornaStatusOKGetNamedd *
(dd* +
)dd+ ,
{ee 	
intgg 
valorEsperadogg 
=gg 
$numgg  #
;gg# $
varii 
Nomeii 
=ii 
$strii &
;ii& '
varkk 
repoMockkk 
=kk 
newkk 
Mockkk #
<kk# $
IPessoaNegociokk$ 2
>kk2 3
(kk3 4
)kk4 5
;kk5 6

Expressionll 
<ll 
Funcll 
<ll 
IPessoaNegocioll *
,ll* +
IEnumerablell, 7
<ll7 8
	PessoaDtoll8 A
>llA B
>llB C
>llC D
callllE I
=llJ K
xllL M
=>llN P
xllQ R
.llR S
SelecionarPorNomellS d
(lld e
Nomelle i
)lli j
;llj k
repoMockmm 
.mm 
Setupmm 
(mm 
callmm 
)mm  
.mm  !
Returnsmm! (
(mm( )
DbMockmm) /
.mm/ 0
Pessoamm0 6
)mm6 7
.mm7 8

Verifiablemm8 B
(mmB C
$strmmC W
)mmW X
;mmX Y
varnn 
_pessoaControllernn !
=nn" #
newnn$ '
PessoaControllernn( 8
(nn8 9
repoMocknn9 A
.nnA B
ObjectnnB H
)nnH I
;nnI J
varqq 
actionResultqq 
=qq 
_pessoaControllerqq 0
.qq0 1
GetNameqq1 8
(qq8 9
Nomeqq9 =
)qq= >
;qq> ?
varrr 
okObjectResultrr 
=rr  
(rr! "
OkObjectResultrr" 0
)rr0 1
actionResultrr1 =
;rr= >
Assertuu 
.uu 
Equaluu 
(uu 
valorEsperadouu &
,uu& '
okObjectResultuu( 6
.uu6 7

StatusCodeuu7 A
)uuA B
;uuB C
repoMockvv 
.vv 
Verifyvv 
(vv 
callvv  
,vv  !
Timesvv" '
.vv' (
Oncevv( ,
)vv, -
;vv- .
}ww 	
[yy 	
Factyy	 
]yy 
publiczz 
voidzz $
RetornaStatusAcceptedPutzz ,
(zz, -
)zz- .
{{{ 	
int}} 
valorEsperado}} 
=}} 
$num}}  #
;}}# $
var 
Id 
= 
$num 
; 
var
 
pessoa
 
=
 
new
 
PessoaInput
 (
(
( )
)
) *
{
 
Nome
 
=
 
$str
 !
,
! "
Email
 
=
 
$str
 +
,
+ ,
Id_papel
 
=
 
$num
 
,
 
	Id_squads
 
=
 
$num
 
,
 

Id_unidade
 
=
 
$num
 
,
 
	Permissao
 
=
 
$num
 
,
 
Senha
 
=
 
$str
 
}
 
;
 
var
 
repoMock
 
=
 
new
 
Mock
 #
<
# $
IPessoaNegocio
$ 2
>
2 3
(
3 4
)
4 5
;
5 6
var
 
_pessoaController
 !
=
" #
new
$ '
PessoaController
( 8
(
8 9
repoMock
9 A
.
A B
Object
B H
)
H I
;
I J
var
 
actionResult
 
=
 
_pessoaController
 0
.
0 1
Put
1 4
(
4 5
Id
5 7
,
7 8
pessoa
9 ?
)
? @
;
@ A
var
 
okObjectResult
 
=
  
(
! "
AcceptedResult
" 0
)
0 1
actionResult
1 =
;
= >
Assert
 
.
 
Equal
 
(
 
valorEsperado
 &
,
& '
okObjectResult
( 6
.
6 7

StatusCode
7 A
)
A B
;
B C
}
 	
[
 	
Fact
	 
]
 
public
 
void
 /
!RetornaStatusAcceptedPutDesativar
 5
(
5 6
)
6 7
{
 	
int
 
valorEsperado
 
=
 
$num
  #
;
# $
var
 
Id
 
=
 
$num
 
;
 
var
 
repoMock
 
=
 
new
 
Mock
 #
<
# $
IPessoaNegocio
$ 2
>
2 3
(
3 4
)
4 5
;
5 6
var
¡¡ 
_pessoaController
¡¡ !
=
¡¡" #
new
¡¡$ '
PessoaController
¡¡( 8
(
¡¡8 9
repoMock
¡¡9 A
.
¡¡A B
Object
¡¡B H
)
¡¡H I
;
¡¡I J
var
¤¤ 
actionResult
¤¤ 
=
¤¤ 
_pessoaController
¤¤ 0
.
¤¤0 1
PutDesativar
¤¤1 =
(
¤¤= >
Id
¤¤> @
)
¤¤@ A
;
¤¤A B
var
¥¥ 
okObjectResult
¥¥ 
=
¥¥  
(
¥¥! "
AcceptedResult
¥¥" 0
)
¥¥0 1
actionResult
¥¥1 =
;
¥¥= >
Assert
¨¨ 
.
¨¨ 
Equal
¨¨ 
(
¨¨ 
valorEsperado
¨¨ &
,
¨¨& '
okObjectResult
¨¨( 6
.
¨¨6 7

StatusCode
¨¨7 A
)
¨¨A B
;
¨¨B C
}
©© 	
[
«« 	
Fact
««	 
]
«« 
public
¬¬ 
void
¬¬ &
RetornaStatusCreatedPost
¬¬ ,
(
¬¬, -
)
¬¬- .
{
­­ 	
int
®® 
valorEsperado
®® 
=
®® 
$num
®®  #
;
®®# $
var
°° 
pessoa
°° 
=
°° 
new
°° 
PessoaInput
°° (
(
°°( )
)
°°) *
{
±± 
Nome
²² 
=
²² 
$str
²² 
,
²² 
Email
³³ 
=
³³ 
$str
³³ +
,
³³+ ,
Id_papel
´´ 
=
´´ 
$num
´´ 
,
´´ 
	Id_squads
µµ 
=
µµ 
$num
µµ 
,
µµ 

Id_unidade
¶¶ 
=
¶¶ 
$num
¶¶ 
,
¶¶ 
	Permissao
·· 
=
·· 
$num
·· 
}
¸¸ 
;
¸¸ 
var
ºº 
repoMock
ºº 
=
ºº 
new
ºº 
Mock
ºº #
<
ºº# $
IPessoaNegocio
ºº$ 2
>
ºº2 3
(
ºº3 4
)
ºº4 5
;
ºº5 6
var
¼¼ 
_pessoaController
¼¼ !
=
¼¼" #
new
¼¼$ '
PessoaController
¼¼( 8
(
¼¼8 9
repoMock
¼¼9 A
.
¼¼A B
Object
¼¼B H
)
¼¼H I
;
¼¼I J
var
¿¿ 
actionResult
¿¿ 
=
¿¿ 
_pessoaController
¿¿ 0
.
¿¿0 1
	Cadastrar
¿¿1 :
(
¿¿: ;
pessoa
¿¿; A
)
¿¿A B
;
¿¿B C
var
ÀÀ 
okObjectResult
ÀÀ 
=
ÀÀ  
(
ÀÀ! ""
CreatedAtRouteResult
ÀÀ" 6
)
ÀÀ6 7
actionResult
ÀÀ7 C
;
ÀÀC D
Assert
ÃÃ 
.
ÃÃ 
Equal
ÃÃ 
(
ÃÃ 
valorEsperado
ÃÃ &
,
ÃÃ& '
okObjectResult
ÃÃ( 6
.
ÃÃ6 7

StatusCode
ÃÃ7 A
)
ÃÃA B
;
ÃÃB C
}
ÄÄ 	
}
ÅÅ 
}ÆÆ àV
PC:\vicelulas\Back-end\Vicelulas\Vicelulas.Teste\APITeste\SquadControllerTeste.cs
	namespace 	
	Vicelulas
 
. 
Teste 
. 
APITeste "
{ 
public 

class  
SquadControllerTeste %
{ 
[ 	
Fact	 
] 
public 
void !
RetornaStatusOKGetAll )
() *
)* +
{ 	
int 
valorEsperado 
= 
$num  #
;# $
var 
repoMock 
= 
new 
Mock #
<# $
ISquadNegocio$ 1
>1 2
(2 3
)3 4
;4 5

Expression 
< 
Func 
< 
ISquadNegocio )
,) *
IEnumerable+ 6
<6 7
SquadDto7 ?
>? @
>@ A
>A B
callC G
=H I
xJ K
=>L N
xO P
.P Q

SelecionarQ [
([ \
)\ ]
;] ^
repoMock 
. 
Setup 
( 
call 
)  
.  !
Returns! (
(( )
DbMock) /
./ 0
Squad0 5
)5 6
;6 7
var   
_squadController    
=  ! "
new  # &
SquadController  ' 6
(  6 7
repoMock  7 ?
.  ? @
Object  @ F
)  F G
;  G H
var## 
actionResult## 
=## 
_squadController## /
.##/ 0
Get##0 3
(##3 4
)##4 5
;##5 6
var$$ 
okObjectResult$$ 
=$$  
($$! "
OkObjectResult$$" 0
)$$0 1
actionResult$$1 =
;$$= >
Assert'' 
.'' 
Equal'' 
('' 
valorEsperado'' &
,''& '
okObjectResult''( 6
.''6 7

StatusCode''7 A
)''A B
;''B C
}(( 	
[** 	
Fact**	 
]** 
public++ 
void++  
RetornaStatusOKGetId++ (
(++( )
)++) *
{,, 	
int// 
valorEsperado// 
=// 
$num//  #
;//# $
var11 
squad11 
=11 
new11 
SquadDto11 $
{22 
Id33 
=33 
$num33 
,33 
Id_Tribo44 
=44 
$num44 
,44 
Nome55 
=55 
$str55 #
,55# $
	NomeTribo66 
=66 
$str66 &
,66& '
Ativo77 
=77 
true77 
}88 
;88 
var99 
repoMock99 
=99 
new99 
Mock99 #
<99# $
ISquadNegocio99$ 1
>991 2
(992 3
)993 4
;994 5

Expression:: 
<:: 
Func:: 
<:: 
ISquadNegocio:: )
,::) *
SquadDto::+ 3
>::3 4
>::4 5
call::6 :
=::; <
x::= >
=>::? A
x::B C
.::C D
SelecionarPorId::D S
(::S T
squad::T Y
.::Y Z
Id::Z \
)::\ ]
;::] ^
repoMock;; 
.;; 
Setup;; 
(;; 
call;; 
);;  
.;;  !
Returns;;! (
(;;( )
squad;;) .
);;. /
.;;/ 0

Verifiable;;0 :
(;;: ;
$str;;; O
);;O P
;;;P Q
var<< 
_squadController<<  
=<<! "
new<<# &
SquadController<<' 6
(<<6 7
repoMock<<7 ?
.<<? @
Object<<@ F
)<<F G
;<<G H
var@@ 
actionResult@@ 
=@@ 
_squadController@@ /
.@@/ 0
GetId@@0 5
(@@5 6
squad@@6 ;
.@@; <
Id@@< >
)@@> ?
;@@? @
varAA 
okObjectResultAA 
=AA  
(AA! "
OkObjectResultAA" 0
)AA0 1
actionResultAA1 =
;AA= >
AssertDD 
.DD 
EqualDD 
(DD 
valorEsperadoDD &
,DD& '
okObjectResultDD( 6
.DD6 7

StatusCodeDD7 A
)DDA B
;DDB C
repoMockEE 
.EE 
VerifyEE 
(EE 
callEE  
,EE  !
TimesEE" '
.EE' (
OnceEE( ,
)EE, -
;EE- .
}FF 	
[HH 	
FactHH	 
]HH 
publicII 
voidII "
RetornaStatusOKGetNameII *
(II* +
)II+ ,
{JJ 	
intLL 
valorEsperadoLL 
=LL 
$numLL  #
;LL# $
varNN 
NomeNN 
=NN 
$strNN #
;NN# $
varPP 
repoMockPP 
=PP 
newPP 
MockPP #
<PP# $
ISquadNegocioPP$ 1
>PP1 2
(PP2 3
)PP3 4
;PP4 5
repoMockQQ 
.QQ 
SetupQQ 
(QQ 
xQQ 
=>QQ 
xQQ  !
.QQ! "
SelecionarPorNomeQQ" 3
(QQ3 4
NomeQQ4 8
)QQ8 9
)QQ9 :
.QQ: ;
ReturnsQQ; B
(QQB C
DbMockQQC I
.QQI J
SquadQQJ O
)QQO P
;QQP Q
varSS 
_squadControllerSS  
=SS! "
newSS# &
SquadControllerSS' 6
(SS6 7
repoMockSS7 ?
.SS? @
ObjectSS@ F
)SSF G
;SSG H
varVV 
actionResultVV 
=VV 
_squadControllerVV /
.VV/ 0
GetNameVV0 7
(VV7 8
NomeVV8 <
)VV< =
;VV= >
varWW 
okObjectResultWW 
=WW  
(WW! "
OkObjectResultWW" 0
)WW0 1
actionResultWW1 =
;WW= >
AssertZZ 
.ZZ 
EqualZZ 
(ZZ 
valorEsperadoZZ &
,ZZ& '
okObjectResultZZ( 6
.ZZ6 7

StatusCodeZZ7 A
)ZZA B
;ZZB C
}[[ 	
[]] 	
Fact]]	 
]]] 
public^^ 
void^^ $
RetornaStatusCreatedPost^^ ,
(^^, -
)^^- .
{__ 	
int`` 
valorEsperado`` 
=`` 
$num``  #
;``# $
varbb 
squadbb 
=bb 
newbb 

SquadInputbb &
{cc 
Id_tribodd 
=dd 
$numdd 
,dd 
Nomeee 
=ee 
$stree 
}ff 
;ff 
varhh 
repoMockhh 
=hh 
newhh 
Mockhh #
<hh# $
ISquadNegociohh$ 1
>hh1 2
(hh2 3
)hh3 4
;hh4 5
varjj 
_squadControllerjj  
=jj! "
newjj# &
SquadControllerjj' 6
(jj6 7
repoMockjj7 ?
.jj? @
Objectjj@ F
)jjF G
;jjG H
varmm 
actionResultmm 
=mm 
_squadControllermm /
.mm/ 0
Postmm0 4
(mm4 5
squadmm5 :
)mm: ;
;mm; <
varnn 
okObjectResultnn 
=nn  
(nn! " 
CreatedAtRouteResultnn" 6
)nn6 7
actionResultnn7 C
;nnC D
Assertqq 
.qq 
Equalqq 
(qq 
valorEsperadoqq &
,qq& '
okObjectResultqq( 6
.qq6 7

StatusCodeqq7 A
)qqA B
;qqB C
}rr 	
[tt 	
Facttt	 
]tt 
publicuu 
voiduu $
RetornaStatusAcceptedPutuu ,
(uu, -
)uu- .
{vv 	
intxx 
valorEsperadoxx 
=xx 
$numxx  #
;xx# $
varzz 
Idzz 
=zz 
$numzz 
;zz 
var{{ 
squad{{ 
={{ 
new{{ 

SquadInput{{ &
({{& '
){{' (
{|| 
Id_tribo}} 
=}} 
$num}} 
,}} 
Nome~~ 
=~~ 
$str~~ !
} 
; 
var
 
repoMock
 
=
 
new
 
Mock
 #
<
# $
ISquadNegocio
$ 1
>
1 2
(
2 3
)
3 4
;
4 5
var
 
_squadController
 !
=
" #
new
$ '
SquadController
( 7
(
7 8
repoMock
8 @
.
@ A
Object
A G
)
G H
;
H I
var
 
actionResult
 
=
 
_squadController
 /
.
/ 0
Put
0 3
(
3 4
Id
4 6
,
6 7
squad
8 =
)
= >
;
> ?
var
 
okObjectResult
 
=
  
(
! "
AcceptedResult
" 0
)
0 1
actionResult
1 =
;
= >
Assert
 
.
 
Equal
 
(
 
valorEsperado
 &
,
& '
okObjectResult
( 6
.
6 7

StatusCode
7 A
)
A B
;
B C
}
 	
[
 	
Fact
	 
]
 
public
 
void
 /
!RetornaStatusAcceptedPutDesativar
 5
(
5 6
)
6 7
{
 	
int
 
valorEsperado
 
=
 
$num
  #
;
# $
var
 
Id
 
=
 
$num
 
;
 
var
 
repoMock
 
=
 
new
 
Mock
 #
<
# $
ISquadNegocio
$ 1
>
1 2
(
2 3
)
3 4
;
4 5
var
 
_squadController
  
=
! "
new
# &
SquadController
' 6
(
6 7
repoMock
7 ?
.
? @
Object
@ F
)
F G
;
G H
var
 
actionResult
 
=
 
_squadController
 /
.
/ 0
PutDesativar
0 <
(
< =
Id
= ?
)
? @
;
@ A
var
 
okObjectResult
 
=
  
(
! "
AcceptedResult
" 0
)
0 1
actionResult
1 =
;
= >
Assert
 
.
 
Equal
 
(
 
valorEsperado
 &
,
& '
okObjectResult
( 6
.
6 7

StatusCode
7 A
)
A B
;
B C
}
 	
}
   
}¡¡ äQ
PC:\vicelulas\Back-end\Vicelulas\Vicelulas.Teste\APITeste\TriboControllerTeste.cs
	namespace 	
	Vicelulas
 
. 
Teste 
. 
APITeste "
{ 
public 

class  
TriboControllerTeste %
{ 
[ 	
Fact	 
] 
public 
void !
RetornaStatusOKGetAll )
() *
)* +
{ 	
int 
valorEsperado 
= 
$num  #
;# $
var 
repoMock 
= 
new 
Mock #
<# $
ITriboNegocio$ 1
>1 2
(2 3
)3 4
;4 5
repoMock 
. 
Setup 
( 
m 
=> 
m  !
.! "

Selecionar" ,
(, -
)- .
). /
./ 0
Returns0 7
(7 8
DbMock8 >
.> ?
Tribo? D
)D E
;E F
var 
_triboController  
=! "
new# &
TriboController' 6
(6 7
repoMock7 ?
.? @
Object@ F
)F G
;G H
var 
actionResult 
= 
_triboController /
./ 0
Get0 3
(3 4
)4 5
;5 6
var 
okObjectResult 
=  
(! "
OkObjectResult" 0
)0 1
actionResult1 =
;= >
Assert!! 
.!! 
Equal!! 
(!! 
valorEsperado!! &
,!!& '
okObjectResult!!( 6
.!!6 7

StatusCode!!7 A
)!!A B
;!!B C
}"" 	
[$$ 	
Fact$$	 
]$$ 
public%% 
void%%  
RetornaStatusOKGetId%% (
(%%( )
)%%) *
{&& 	
int)) 
valorEsperado)) 
=)) 
$num))  #
;))# $
var++ 
tribo++ 
=++ 
new++ 
TriboDto++ $
{,, 
Id-- 
=-- 
$num-- 
,-- 
Nome.. 
=.. 
$str.. !
,..! "
Ativo// 
=// 
true// 
}00 
;00 
var22 
repoMock22 
=22 
new22 
Mock22 #
<22# $
ITriboNegocio22$ 1
>221 2
(222 3
)223 4
;224 5

Expression33 
<33 
Func33 
<33 
ITriboNegocio33 )
,33) *
TriboDto33+ 3
>333 4
>334 5
call336 :
=33; <
x33= >
=>33? A
x33B C
.33C D
SelecionarPorId33D S
(33S T
tribo33T Y
.33Y Z
Id33Z \
)33\ ]
;33] ^
repoMock44 
.44 
Setup44 
(44 
call44 
)44  
.44  !
Returns44! (
(44( )
tribo44) .
)44. /
.44/ 0

Verifiable440 :
(44: ;
$str44; O
)44O P
;44P Q
var55 
_triboController55  
=55! "
new55# &
TriboController55' 6
(556 7
repoMock557 ?
.55? @
Object55@ F
)55F G
;55G H
var99 
actionResult99 
=99 
_triboController99 /
.99/ 0
GetId990 5
(995 6
tribo996 ;
.99; <
Id99< >
)99> ?
;99? @
var:: 
okObjectResult:: 
=::  
(::! "
OkObjectResult::" 0
)::0 1
actionResult::1 =
;::= >
Assert== 
.== 
Equal== 
(== 
valorEsperado== &
,==& '
okObjectResult==( 6
.==6 7

StatusCode==7 A
)==A B
;==B C
repoMock>> 
.>> 
Verify>> 
(>> 
call>>  
,>>  !
Times>>" '
.>>' (
Once>>( ,
)>>, -
;>>- .
}?? 	
[AA 	
FactAA	 
]AA 
publicBB 
voidBB "
RetornaStatusOKGetNameBB *
(BB* +
)BB+ ,
{CC 	
intEE 
valorEsperadoEE 
=EE 
$numEE  #
;EE# $
varGG 
NomeGG 
=GG 
$strGG !
;GG! "
varII 
repoMockII 
=II 
newII 
MockII #
<II# $
ITriboNegocioII$ 1
>II1 2
(II2 3
)II3 4
;II4 5
repoMockJJ 
.JJ 
SetupJJ 
(JJ 
xJJ 
=>JJ 
xJJ  !
.JJ! "
SelecionarPorNomeJJ" 3
(JJ3 4
NomeJJ4 8
)JJ8 9
)JJ9 :
.JJ: ;
ReturnsJJ; B
(JJB C
DbMockJJC I
.JJI J
TriboJJJ O
)JJO P
;JJP Q
varLL 
_triboControllerLL  
=LL! "
newLL# &
TriboControllerLL' 6
(LL6 7
repoMockLL7 ?
.LL? @
ObjectLL@ F
)LLF G
;LLG H
varOO 
actionResultOO 
=OO 
_triboControllerOO /
.OO/ 0
GetNameOO0 7
(OO7 8
NomeOO8 <
)OO< =
;OO= >
varPP 
okObjectResultPP 
=PP  
(PP! "
OkObjectResultPP" 0
)PP0 1
actionResultPP1 =
;PP= >
AssertSS 
.SS 
EqualSS 
(SS 
valorEsperadoSS &
,SS& '
okObjectResultSS( 6
.SS6 7

StatusCodeSS7 A
)SSA B
;SSB C
}TT 	
[VV 	
FactVV	 
]VV 
publicWW 
voidWW $
RetornaStatusCreatedPostWW ,
(WW, -
)WW- .
{XX 	
intYY 
valorEsperadoYY 
=YY 
$numYY  #
;YY# $
var[[ 
tribo[[ 
=[[ 
new[[ 

TriboInput[[ &
{\\ 
Nome]] 
=]] 
$str]] 
}__ 
;__ 
varaa 
repoMockaa 
=aa 
newaa 
Mockaa #
<aa# $
ITriboNegocioaa$ 1
>aa1 2
(aa2 3
)aa3 4
;aa4 5
varcc 
_triboControllercc  
=cc! "
newcc# &
TriboControllercc' 6
(cc6 7
repoMockcc7 ?
.cc? @
Objectcc@ F
)ccF G
;ccG H
varff 
actionResultff 
=ff 
_triboControllerff /
.ff/ 0
Postff0 4
(ff4 5
triboff5 :
)ff: ;
;ff; <
vargg 
okObjectResultgg 
=gg  
(gg! " 
CreatedAtRouteResultgg" 6
)gg6 7
actionResultgg7 C
;ggC D
Assertjj 
.jj 
Equaljj 
(jj 
valorEsperadojj &
,jj& '
okObjectResultjj( 6
.jj6 7

StatusCodejj7 A
)jjA B
;jjB C
}kk 	
[mm 	
Factmm	 
]mm 
publicnn 
voidnn $
RetornaStatusAcceptedPutnn ,
(nn, -
)nn- .
{oo 	
intqq 
valorEsperadoqq 
=qq 
$numqq  #
;qq# $
varss 
Idss 
=ss 
$numss 
;ss 
vartt 
tribott 
=tt 
newtt 

TriboInputtt &
(tt& '
)tt' (
{uu 
Nomevv 
=vv 
$strvv !
}xx 
;xx 
varzz 
repoMockzz 
=zz 
newzz 
Mockzz #
<zz# $
ITriboNegociozz$ 1
>zz1 2
(zz2 3
)zz3 4
;zz4 5
var|| 
_triboController||  
=||! "
new||# &
TriboController||' 6
(||6 7
repoMock||7 ?
.||? @
Object||@ F
)||F G
;||G H
var 
actionResult 
= 
_triboController /
./ 0
Put0 3
(3 4
Id4 6
,6 7
tribo8 =
)= >
;> ?
var
 
okObjectResult
 
=
  
(
! "
AcceptedResult
" 0
)
0 1
actionResult
1 =
;
= >
Assert
 
.
 
Equal
 
(
 
valorEsperado
 &
,
& '
okObjectResult
( 6
.
6 7

StatusCode
7 A
)
A B
;
B C
}
 	
[
 	
Fact
	 
]
 
public
 
void
 /
!RetornaStatusAcceptedPutDesativar
 5
(
5 6
)
6 7
{
 	
int
 
valorEsperado
 
=
 
$num
  #
;
# $
var
 
Id
 
=
 
$num
 
;
 
var
 
repoMock
 
=
 
new
 
Mock
 #
<
# $
ITriboNegocio
$ 1
>
1 2
(
2 3
)
3 4
;
4 5
var
 
_triboController
  
=
! "
new
# &
TriboController
' 6
(
6 7
repoMock
7 ?
.
? @
Object
@ F
)
F G
;
G H
var
 
actionResult
 
=
 
_triboController
 /
.
/ 0
PutDesativar
0 <
(
< =
Id
= ?
)
? @
;
@ A
var
 
okObjectResult
 
=
  
(
! "
AcceptedResult
" 0
)
0 1
actionResult
1 =
;
= >
Assert
 
.
 
Equal
 
(
 
valorEsperado
 &
,
& '
okObjectResult
( 6
.
6 7

StatusCode
7 A
)
A B
;
B C
}
 	
}
 
} Ú
RC:\vicelulas\Back-end\Vicelulas\Vicelulas.Teste\APITeste\UnidadeControllerTeste.cs
	namespace 	
	Vicelulas
 
. 
Teste 
. 
APITeste "
{ 
public 

class "
UnidadeControllerTeste '
{ 
[ 	
Fact	 
] 
public 
void !
RetornaStatusOKGetAll )
() *
)* +
{ 	
int 
valorEsperado 
= 
$num  #
;# $
var 
repoMock 
= 
new 
Mock #
<# $
IUnidadeNegocio$ 3
>3 4
(4 5
)5 6
;6 7
repoMock 
. 
Setup 
( 
m 
=> 
m  !
.! "

Selecionar" ,
(, -
)- .
). /
./ 0
Returns0 7
(7 8
DbMock8 >
.> ?
Unidade? F
)F G
;G H
var 
_unidadeController "
=# $
new% (
UnidadeController) :
(: ;
repoMock; C
.C D
ObjectD J
)J K
;K L
var 
actionResult 
= 
_unidadeController 1
.1 2
Get2 5
(5 6
)6 7
;7 8
var 
okObjectResult 
=  
(! "
OkObjectResult" 0
)0 1
actionResult1 =
;= >
Assert"" 
."" 
Equal"" 
("" 
valorEsperado"" &
,""& '
okObjectResult""( 6
.""6 7

StatusCode""7 A
)""A B
;""B C
}## 	
}$$ 
}%% ¨
QC:\vicelulas\Back-end\Vicelulas\Vicelulas.Teste\DominioTeste\PasswordHashTeste.cs
	namespace 	
	Vicelulas
 
. 
Teste 
. 
DominioTeste &
{ 
public 

class 
PasswordHashTeste "
{ 
[ 	
Fact	 
] 
public		 
void		 #
RetornaOkComparacaoHash		 +
(		+ ,
)		, -
{

 	
var 
senha 
= 
$str "
;" #
var 
hash 
= 
PasswordHash #
.# $
Create$ *
(* +
senha+ 0
)0 1
;1 2
var 
	hashTeste 
= 
$str >
;> ?
Assert 
. 
Equal 
( 
hash 
, 
	hashTeste (
)( )
;) *
} 	
[ 	
Fact	 
] 
public 
void &
RetornaFalseComparacaoHash .
(. /
)/ 0
{ 	
var 
senha 
= 
$str "
;" #
var 
hash 
= 
PasswordHash #
.# $
Create$ *
(* +
senha+ 0
)0 1
;1 2
var 
	hashTeste 
= 
$str 7
;7 8
Assert 
. 
NotEqual 
( 
hash  
,  !
	hashTeste" +
)+ ,
;, -
} 	
} 
}  0
XC:\vicelulas\Back-end\Vicelulas\Vicelulas.Teste\NegocioTeste\AutenticacaoNegocioTeste.cs
	namespace 	
	Vicelulas
 
. 
Teste 
. 
NegocioTeste &
{ 
public 

class $
AutenticacaoNegocioTeste )
{ 
[ 	
Fact	 
] 
public 
void 
EntrarOk 
( 
) 
{ 	
var 
username 
= 
$str -
;- .
var 
senha 
= 
$str "
;" #
var 
repoMock 
= 
new 
Mock #
<# $$
IAutenticacaoRepositorio$ <
>< =
(= >
)> ?
;? @
repoMock 
. 
Setup 
( 
m 
=> 
m  !
.! "
Entrar" (
(( )
username) 1
,1 2
senha3 8
)8 9
)9 :
.: ;
Returns; B
(B C
DbMockC I
.I J
PessoaJ P
[P Q
$numQ R
]R S
)S T
;T U
var  
_autenticacaoNegocio $
=% &
new' *
AutenticacaoNegocio+ >
(> ?
repoMock? G
.G H
ObjectH N
)N O
;O P
var   
objRetornado   
=    
_autenticacaoNegocio   3
.  3 4
Entrar  4 :
(  : ;
username  ; C
,  C D
senha  E J
)  J K
;  K L
Assert## 
.## 
NotNull## 
(## 
objRetornado## '
)##' (
;##( )
}$$ 	
[&& 	
Fact&&	 
]&& 
public'' 
void'' #
AutenticacaoEmptyOrNull'' +
(''+ ,
)'', -
{(( 	
var** 
username** 
=** 
$str** 
;** 
var++ 
password++ 
=++ 
$str++ 
;++ 
var-- 
repoMock-- 
=-- 
new-- 
Mock-- #
<--# $$
IAutenticacaoRepositorio--$ <
>--< =
(--= >
)--> ?
;--? @
repoMock.. 
... 
Setup.. 
(.. 
m.. 
=>.. 
m..  !
...! "
Entrar.." (
(..( )
username..) 1
,..1 2
password..3 ;
)..; <
)..< =
...= >
Returns..> E
(..E F
DbMock..F L
...L M
Pessoa..M S
[..S T
$num..T U
]..U V
)..V W
;..W X
var00  
_autenticacaoNegocio00 $
=00% &
new00' *
AutenticacaoNegocio00+ >
(00> ?
repoMock00? G
.00G H
Object00H N
)00N O
;00O P
Assert33 
.33 
Throws33 
<33 "
NaoEncontradoException33 0
>330 1
(331 2
(332 3
)333 4
=>335 7 
_autenticacaoNegocio338 L
.33L M
Entrar33M S
(33S T
username33T \
,33\ ]
password33^ f
)33f g
)33g h
;33h i
}44 	
[66 	
Fact66	 
]66 
public77 
void77 
AutenticacaoInativa77 '
(77' (
)77( )
{88 	
var:: 
pessoa:: 
=:: 
new:: 
	PessoaDto:: &
{;; 
Id<< 
=<< 
$num<< 
,<< 
Id_Papel== 
=== 
$num== 
,== 
Nome>> 
=>> 
$str>> 
,>> 
Email?? 
=?? 
$str?? *
,??* +
Cargo@@ 
=@@ 
$str@@ $
,@@$ %
AtivoAA 
=AA 
falseAA 
,AA 
	Id_SquadsBB 
=BB 
$numBB 
,BB 
Id_TriboCC 
=CC 
$numCC 
,CC 

Id_UnidadeDD 
=DD 
$numDD 
,DD 
	PermissaoEE 
=EE 
$numEE 
,EE 
	SquadNomeFF 
=FF 
$strFF #
,FF# $
	TriboNomeGG 
=GG 
$strGG &
,GG& '
UnidadeHH 
=HH 
$strHH *
}II 
;II 
varKK 
passwordKK 
=KK 
$strKK %
;KK% &
varMM 
repoMockMM 
=MM 
newMM 
MockMM #
<MM# $$
IAutenticacaoRepositorioMM$ <
>MM< =
(MM= >
)MM> ?
;MM? @
repoMockNN 
.NN 
SetupNN 
(NN 
mNN 
=>NN 
mNN  !
.NN! "
EntrarNN" (
(NN( )
pessoaNN) /
.NN/ 0
EmailNN0 5
,NN5 6
passwordNN7 ?
)NN? @
)NN@ A
.NNA B
ReturnsNNB I
(NNI J
pessoaNNJ P
)NNP Q
;NNQ R
varPP  
_autenticacaoNegocioPP $
=PP% &
newPP' *
AutenticacaoNegocioPP+ >
(PP> ?
repoMockPP? G
.PPG H
ObjectPPH N
)PPN O
;PPO P 
_autenticacaoNegocioSS  
.SS  !
EntrarSS! '
(SS' (
pessoaSS( .
.SS. /
EmailSS/ 4
,SS4 5
passwordSS6 >
)SS> ?
;SS? @
AssertVV 
.VV 
ThrowsVV 
<VV 
RecusadoExceptionVV +
>VV+ ,
(VV, -
(VV- .
)VV. /
=>VV0 2 
_autenticacaoNegocioVV3 G
.VVG H
EntrarVVH N
(VVN O
pessoaVVO U
.VVU V
EmailVVV [
,VV[ \
passwordVV] e
)VVe f
)VVf g
;VVg h
}WW 	
}YY 
}ZZ Ç
RC:\vicelulas\Back-end\Vicelulas\Vicelulas.Teste\NegocioTeste\MentorNegocioTeste.cs
	namespace 	
	Vicelulas
 
. 
Teste 
. 
NegocioTeste &
{ 
public 

class 
MentorNegocioTeste #
{ 
[ 	
Fact	 
] 
public 
void 
ListaDeMentorOK #
(# $
)$ %
{ 	
var 
repoMock 
= 
new 
Mock #
<# $
IMentorRepositorio$ 6
>6 7
(7 8
)8 9
;9 :
repoMock 
. 
Setup 
( 
m 
=> 
m  !
.! "

Selecionar" ,
(, -
)- .
). /
./ 0
Returns0 7
(7 8
DbMock8 >
.> ?
Mentor? E
)E F
;F G
var 
_mentorNegocio 
=  
new! $
MentorNegocio% 2
(2 3
repoMock3 ;
.; <
Object< B
)B C
;C D
var 
objRetornado 
= 
_mentorNegocio -
.- .

Selecionar. 8
(8 9
)9 :
;: ;
Assert   
.   
NotNull   
(   
objRetornado   '
)  ' (
;  ( )
Assert!! 
.!! 
Same!! 
(!! 
DbMock!! 
.!! 
Mentor!! %
,!!% &
objRetornado!!' 3
)!!3 4
;!!4 5
}"" 	
}## 
}$$ ¾
QC:\vicelulas\Back-end\Vicelulas\Vicelulas.Teste\NegocioTeste\PapelNegocioTeste.cs
	namespace 	
	Vicelulas
 
. 
Teste 
. 
NegocioTeste &
{ 
public 

class 
PapelNegocioTeste "
{ 
[ 	
Fact	 
] 
public 
void 
ListaDePapelOK "
(" #
)# $
{ 	
var 
repoMock 
= 
new 
Mock #
<# $
IPapelRepositorio$ 5
>5 6
(6 7
)7 8
;8 9
repoMock 
. 
Setup 
( 
m 
=> 
m  !
.! "

Selecionar" ,
(, -
)- .
). /
./ 0
Returns0 7
(7 8
DbMock8 >
.> ?
Papel? D
)D E
;E F
var 
_papelNegocio 
= 
new  #
PapelNegocio$ 0
(0 1
repoMock1 9
.9 :
Object: @
)@ A
;A B
var 
objRetornado 
= 
_papelNegocio ,
., -

Selecionar- 7
(7 8
)8 9
;9 :
Assert 
. 
NotNull 
( 
objRetornado '
)' (
;( )
Assert   
.   
Same   
(   
DbMock   
.   
Papel   $
,  $ %
objRetornado  & 2
)  2 3
;  3 4
}!! 	
}"" 
}## ®±
RC:\vicelulas\Back-end\Vicelulas\Vicelulas.Teste\NegocioTeste\PessoaNegocioTeste.cs
	namespace 	
	Vicelulas
 
. 
Teste 
. 
NegocioTeste &
{ 
public 

class 
PessoaNegocioTeste #
{ 
[ 	
Fact	 
] 
public 
void 
ListaDePessoaOK #
(# $
)$ %
{ 	
var 
repoMock 
= 
new 
Mock #
<# $
IPessoaRepositorio$ 6
>6 7
(7 8
)8 9
;9 :
repoMock 
. 
Setup 
( 
m 
=> 
m  !
.! "

Selecionar" ,
(, -
)- .
). /
./ 0
Returns0 7
(7 8
DbMock8 >
.> ?
Pessoa? E
)E F
;F G
var 
	repoMock2 
= 
new 
Mock  $
<$ %
IMentorRepositorio% 7
>7 8
(8 9
)9 :
;: ;
	repoMock2 
. 
Setup 
( 
m 
=>  
m! "
." #

Selecionar# -
(- .
). /
)/ 0
.0 1
Returns1 8
(8 9
DbMock9 ?
.? @
Mentor@ F
)F G
;G H
var 
_pessoaNegocio 
=  
new! $
PessoaNegocio% 2
(2 3
repoMock3 ;
.; <
Object< B
,B C
	repoMock2D M
.M N
ObjectN T
)T U
;U V
var 
objRetornado 
= 
_pessoaNegocio -
.- .

Selecionar. 8
(8 9
)9 :
;: ;
Assert   
.   
NotNull   
(   
objRetornado   '
)  ' (
;  ( )
Assert!! 
.!! 
Same!! 
(!! 
DbMock!! 
.!! 
Pessoa!! %
,!!% &
objRetornado!!' 3
)!!3 4
;!!4 5
}"" 	
[$$ 	
Fact$$	 
]$$ 
public%% 
void%% 
PessoaPorIdOk%% !
(%%! "
)%%" #
{&& 	
var(( 
pessoa(( 
=(( 
new(( 
	PessoaDto(( &
{)) 
Id** 
=** 
$num** 
,** 
}++ 
;++ 
var-- 
repoMock-- 
=-- 
new-- 
Mock-- #
<--# $
IPessoaRepositorio--$ 6
>--6 7
(--7 8
)--8 9
;--9 :
repoMock.. 
... 
Setup.. 
(.. 
m.. 
=>.. 
m..  !
...! "
SelecionarPorId.." 1
(..1 2
pessoa..2 8
...8 9
Id..9 ;
)..; <
)..< =
...= >
Returns..> E
(..E F
pessoa..F L
)..L M
;..M N
var// 
	repoMock2// 
=// 
new// 
Mock//  $
<//$ %
IMentorRepositorio//% 7
>//7 8
(//8 9
)//9 :
;//: ;
var11 
_pessoaNegocio11 
=11  
new11! $
PessoaNegocio11% 2
(112 3
repoMock113 ;
.11; <
Object11< B
,11B C
	repoMock211D M
.11M N
Object11N T
)11T U
;11U V
var44 
objRetornado44 
=44 
_pessoaNegocio44 -
.44- .
SelecionarPorId44. =
(44= >
pessoa44> D
.44D E
Id44E G
)44G H
;44H I
Assert77 
.77 
NotNull77 
(77 
objRetornado77 '
)77' (
;77( )
Assert88 
.88 
Same88 
(88 
pessoa88 
,88 
objRetornado88  ,
)88, -
;88- .
}99 	
[;; 	
Fact;;	 
];; 
public<< 
void<< 
PessoaPorIdNotFound<< '
(<<' (
)<<( )
{== 	
int?? 
id?? 
=?? 
$num?? 
;?? 
varAA 
repoMockAA 
=AA 
newAA 
MockAA #
<AA# $
IPessoaRepositorioAA$ 6
>AA6 7
(AA7 8
)AA8 9
;AA9 :
varBB 
	repoMock2BB 
=BB 
newBB 
MockBB  $
<BB$ %
IMentorRepositorioBB% 7
>BB7 8
(BB8 9
)BB9 :
;BB: ;
varDD 
_pessoaNegocioDD 
=DD  
newDD! $
PessoaNegocioDD% 2
(DD2 3
repoMockDD3 ;
.DD; <
ObjectDD< B
,DDB C
	repoMock2DDD M
.DDM N
ObjectDDN T
)DDT U
;DDU V
AssertGG 
.GG 
ThrowsGG 
<GG "
NaoEncontradoExceptionGG 0
>GG0 1
(GG1 2
(GG2 3
)GG3 4
=>GG5 7
_pessoaNegocioGG8 F
.GGF G
SelecionarPorIdGGG V
(GGV W
idGGW Y
)GGY Z
)GGZ [
;GG[ \
}HH 	
[KK 	
FactKK	 
]KK 
publicLL 
voidLL 
PessoaPorNomeOKLL #
(LL# $
)LL$ %
{MM 	
varOO 
nomeOO 
=OO 
$strOO &
;OO& '
varQQ 
repoMockQQ 
=QQ 
newQQ 
MockQQ #
<QQ# $
IPessoaRepositorioQQ$ 6
>QQ6 7
(QQ7 8
)QQ8 9
;QQ9 :
varRR 
	repoMock2RR 
=RR 
newRR 
MockRR  $
<RR$ %
IMentorRepositorioRR% 7
>RR7 8
(RR8 9
)RR9 :
;RR: ;
repoMockSS 
.SS 
SetupSS 
(SS 
mSS 
=>SS 
mSS  !
.SS! "
SelecionarPorNomeSS" 3
(SS3 4
nomeSS4 8
)SS8 9
)SS9 :
.SS: ;
ReturnsSS; B
(SSB C
DbMockSSC I
.SSI J
PessoaSSJ P
)SSP Q
;SSQ R
varUU 
_pessoaNegocioUU 
=UU  
newUU! $
PessoaNegocioUU% 2
(UU2 3
repoMockUU3 ;
.UU; <
ObjectUU< B
,UUB C
	repoMock2UUD M
.UUM N
ObjectUUN T
)UUT U
;UUU V
varXX 
objRetornadoXX 
=XX 
_pessoaNegocioXX -
.XX- .
SelecionarPorNomeXX. ?
(XX? @
nomeXX@ D
)XXD E
;XXE F
Assert[[ 
.[[ 
NotNull[[ 
([[ 
objRetornado[[ '
)[[' (
;[[( )
}\\ 	
[^^ 	
Fact^^	 
]^^ 
public__ 
void__ 
PessoaPorNomeNulo__ %
(__% &
)__& '
{`` 	
varbb 
pessoabb 
=bb 
newbb 
	PessoaDtobb &
{cc 
Nomedd 
=dd 
nulldd 
,dd 
}ee 
;ee 
vargg 
repoMockgg 
=gg 
newgg 
Mockgg #
<gg# $
IPessoaRepositoriogg$ 6
>gg6 7
(gg7 8
)gg8 9
;gg9 :
repoMockhh 
.hh 
Setuphh 
(hh 
mhh 
=>hh 
mhh  !
.hh! "
SelecionarPorNomehh" 3
(hh3 4
pessoahh4 :
.hh: ;
Nomehh; ?
)hh? @
)hh@ A
;hhA B
varii 
	repoMock2ii 
=ii 
newii 
Mockii  $
<ii$ %
IMentorRepositorioii% 7
>ii7 8
(ii8 9
)ii9 :
;ii: ;
varkk 

pessoaNullkk 
=kk 
newkk  
PessoaNegociokk! .
(kk. /
repoMockkk/ 7
.kk7 8
Objectkk8 >
,kk> ?
	repoMock2kk@ I
.kkI J
ObjectkkJ P
)kkP Q
;kkQ R
Assertnn 
.nn 
Throwsnn 
<nn "
NaoEncontradoExceptionnn 0
>nn0 1
(nn1 2
(nn2 3
)nn3 4
=>nn5 7

pessoaNullnn8 B
.nnB C
SelecionarPorNomennC T
(nnT U
pessoannU [
.nn[ \
Nomenn\ `
)nn` a
)nna b
;nnb c
}oo 	
[qq 	
Factqq	 
]qq 
publicrr 
voidrr !
PessoaPorNomeNotFoundrr )
(rr) *
)rr* +
{ss 	
varuu 
nomeuu 
=uu 
$struu 
;uu 
varww 
repoMockww 
=ww 
newww 
Mockww #
<ww# $
IPessoaRepositorioww$ 6
>ww6 7
(ww7 8
)ww8 9
;ww9 :
repoMockxx 
.xx 
Setupxx 
(xx 
mxx 
=>xx 
mxx  !
.xx! "
SelecionarPorNomexx" 3
(xx3 4
nomexx4 8
)xx8 9
)xx9 :
;xx: ;
varyy 
	repoMock2yy 
=yy 
newyy 
Mockyy  $
<yy$ %
IMentorRepositorioyy% 7
>yy7 8
(yy8 9
)yy9 :
;yy: ;
var|| 
_pessoaNegocio|| 
=||  
new||! $
PessoaNegocio||% 2
(||2 3
repoMock||3 ;
.||; <
Object||< B
,||B C
	repoMock2||D M
.||M N
Object||N T
)||T U
;||U V
Assert
 
.
 
Throws
 
<
 $
NaoEncontradoException
 0
>
0 1
(
1 2
(
2 3
)
3 4
=>
5 7
_pessoaNegocio
8 F
.
F G
SelecionarPorNome
G X
(
X Y
nome
Y ]
)
] ^
)
^ _
;
_ `
}
 	
[
 	
Fact
	 
]
 
public
 
void
  
PessoaPorIdSquadOK
 &
(
& '
)
' (
{
 	
var
 
id
 
=
 
$num
 
;
 
var
 
repoMock
 
=
 
new
 
Mock
 #
<
# $ 
IPessoaRepositorio
$ 6
>
6 7
(
7 8
)
8 9
;
9 :
var
 
	repoMock2
 
=
 
new
 
Mock
  $
<
$ % 
IMentorRepositorio
% 7
>
7 8
(
8 9
)
9 :
;
: ;
repoMock
 
.
 
Setup
 
(
 
m
 
=>
 
m
  !
.
! ""
SelecionarPorIdSquad
" 6
(
6 7
id
7 9
)
9 :
)
: ;
.
; <
Returns
< C
(
C D
DbMock
D J
.
J K
Pessoa
K Q
)
Q R
;
R S
var
 
_pessoaNegocio
 
=
  
new
! $
PessoaNegocio
% 2
(
2 3
repoMock
3 ;
.
; <
Object
< B
,
B C
	repoMock2
D M
.
M N
Object
N T
)
T U
;
U V
var
 
objRetornado
 
=
 
_pessoaNegocio
 -
.
- ."
SelecionarPorIdSquad
. B
(
B C
id
C E
)
E F
;
F G
Assert
 
.
 
NotNull
 
(
 
objRetornado
 '
)
' (
;
( )
}
 	
[
 	
Fact
	 
]
 
public
 
void
 "
PessoaPorIdSquadNulo
 (
(
( )
)
) *
{
 	
var
 
pessoa
 
=
 
new
 
	PessoaDto
 &
{
 
	Id_Squads
 
=
 
$num
 
,
 
}
 
;
 
var
 
repoMock
 
=
 
new
 
Mock
 #
<
# $ 
IPessoaRepositorio
$ 6
>
6 7
(
7 8
)
8 9
;
9 :
repoMock
   
.
   
Setup
   
(
   
m
   
=>
   
m
    !
.
  ! ""
SelecionarPorIdSquad
  " 6
(
  6 7
pessoa
  7 =
.
  = >
	Id_Squads
  > G
)
  G H
)
  H I
;
  I J
var
¡¡ 
	repoMock2
¡¡ 
=
¡¡ 
new
¡¡ 
Mock
¡¡  $
<
¡¡$ % 
IMentorRepositorio
¡¡% 7
>
¡¡7 8
(
¡¡8 9
)
¡¡9 :
;
¡¡: ;
var
££ 

pessoaNull
££ 
=
££ 
new
££  
PessoaNegocio
££! .
(
££. /
repoMock
££/ 7
.
££7 8
Object
££8 >
,
££> ?
	repoMock2
££@ I
.
££I J
Object
££J P
)
££P Q
;
££Q R
Assert
§§ 
.
§§ 
Throws
§§ 
<
§§ $
NaoEncontradoException
§§ 0
>
§§0 1
(
§§1 2
(
§§2 3
)
§§3 4
=>
§§5 7

pessoaNull
§§8 B
.
§§B C"
SelecionarPorIdSquad
§§C W
(
§§W X
pessoa
§§X ^
.
§§^ _
	Id_Squads
§§_ h
)
§§h i
)
§§i j
;
§§j k
}
¨¨ 	
[
ªª 	
Fact
ªª	 
]
ªª 
public
«« 
void
«« 
PessoaInserirOk
«« #
(
««# $
)
««$ %
{
¬¬ 	
var
®® 
pessoa
®® 
=
®® 
new
®® 
Pessoa
®® #
{
¯¯ 
Id
°° 
=
°° 
$num
°° 
,
°° 
Id_papel
±± 
=
±± 
$num
±± 
,
±± 
Nome
²² 
=
²² 
$str
²² &
,
²²& '
Senha
³³ 
=
³³ 
$str
³³ "
,
³³" #
Email
´´ 
=
´´ 
$str
´´ *
,
´´* +
Ativo
µµ 
=
µµ 
true
µµ 
,
µµ 
Id_squad
¶¶ 
=
¶¶ 
$num
¶¶ 
,
¶¶ 

Id_unidade
·· 
=
·· 
$num
·· 
,
·· 
	Permissao
¸¸ 
=
¸¸ 
$num
¸¸ 
,
¸¸ 
}
¹¹ 
;
¹¹ 
var
»» 
repoMock
»» 
=
»» 
new
»» 
Mock
»» #
<
»»# $ 
IPessoaRepositorio
»»$ 6
>
»»6 7
(
»»7 8
)
»»8 9
;
»»9 :
repoMock
¼¼ 
.
¼¼ 
Setup
¼¼ 
(
¼¼ 
m
¼¼ 
=>
¼¼ 
m
¼¼  !
.
¼¼! "
Inserir
¼¼" )
(
¼¼) *
pessoa
¼¼* 0
)
¼¼0 1
)
¼¼1 2
.
¼¼2 3
Returns
¼¼3 :
(
¼¼: ;
pessoa
¼¼; A
.
¼¼A B
Id
¼¼B D
)
¼¼D E
;
¼¼E F
var
½½ 
	repoMock2
½½ 
=
½½ 
new
½½ 
Mock
½½  $
<
½½$ % 
IMentorRepositorio
½½% 7
>
½½7 8
(
½½8 9
)
½½9 :
;
½½: ;
var
¿¿ 
_pessoaNegocio
¿¿ 
=
¿¿  
new
¿¿! $
PessoaNegocio
¿¿% 2
(
¿¿2 3
repoMock
¿¿3 ;
.
¿¿; <
Object
¿¿< B
,
¿¿B C
	repoMock2
¿¿D M
.
¿¿M N
Object
¿¿N T
)
¿¿T U
;
¿¿U V
var
ÂÂ 
objRetornado
ÂÂ 
=
ÂÂ 
_pessoaNegocio
ÂÂ -
.
ÂÂ- .
Inserir
ÂÂ. 5
(
ÂÂ5 6
pessoa
ÂÂ6 <
)
ÂÂ< =
;
ÂÂ= >
Assert
ÅÅ 
.
ÅÅ 
Equal
ÅÅ 
(
ÅÅ 
pessoa
ÅÅ 
.
ÅÅ  
Id
ÅÅ  "
,
ÅÅ" #
objRetornado
ÅÅ$ 0
)
ÅÅ0 1
;
ÅÅ1 2
}
ÆÆ 	
[
ÈÈ 	
Fact
ÈÈ	 
]
ÈÈ 
public
ÉÉ 
void
ÉÉ *
PessoaInserirNomeNullOrEmpty
ÉÉ 0
(
ÉÉ0 1
)
ÉÉ1 2
{
ÊÊ 	
var
ÌÌ 
pessoa
ÌÌ 
=
ÌÌ 
new
ÌÌ 
Pessoa
ÌÌ #
{
ÍÍ 
Nome
ÎÎ 
=
ÎÎ 
null
ÎÎ 
,
ÎÎ 
}
ÏÏ 
;
ÏÏ 
var
ÑÑ 
repoMock
ÑÑ 
=
ÑÑ 
new
ÑÑ 
Mock
ÑÑ #
<
ÑÑ# $ 
IPessoaRepositorio
ÑÑ$ 6
>
ÑÑ6 7
(
ÑÑ7 8
)
ÑÑ8 9
;
ÑÑ9 :
repoMock
ÒÒ 
.
ÒÒ 
Setup
ÒÒ 
(
ÒÒ 
m
ÒÒ 
=>
ÒÒ 
m
ÒÒ  !
.
ÒÒ! "
Inserir
ÒÒ" )
(
ÒÒ) *
pessoa
ÒÒ* 0
)
ÒÒ0 1
)
ÒÒ1 2
;
ÒÒ2 3
var
ÓÓ 
	repoMock2
ÓÓ 
=
ÓÓ 
new
ÓÓ 
Mock
ÓÓ  $
<
ÓÓ$ % 
IMentorRepositorio
ÓÓ% 7
>
ÓÓ7 8
(
ÓÓ8 9
)
ÓÓ9 :
;
ÓÓ: ;
var
ÕÕ 
_pessoaNegocio
ÕÕ 
=
ÕÕ  
new
ÕÕ! $
PessoaNegocio
ÕÕ% 2
(
ÕÕ2 3
repoMock
ÕÕ3 ;
.
ÕÕ; <
Object
ÕÕ< B
,
ÕÕB C
	repoMock2
ÕÕD M
.
ÕÕM N
Object
ÕÕN T
)
ÕÕT U
;
ÕÕU V
Assert
ØØ 
.
ØØ 
Throws
ØØ 
<
ØØ 
ConflitoException
ØØ +
>
ØØ+ ,
(
ØØ, -
(
ØØ- .
)
ØØ. /
=>
ØØ0 2
_pessoaNegocio
ØØ3 A
.
ØØA B
Inserir
ØØB I
(
ØØI J
pessoa
ØØJ P
)
ØØP Q
)
ØØQ R
;
ØØR S
}
ÙÙ 	
[
ÛÛ 	
Fact
ÛÛ	 
]
ÛÛ 
public
ÜÜ 
void
ÜÜ %
PessoaAtivarDesativarOk
ÜÜ +
(
ÜÜ+ ,
)
ÜÜ, -
{
ÝÝ 	
var
ßß 
pessoa
ßß 
=
ßß 
new
ßß 
Pessoa
ßß #
{
àà 
Id
áá 
=
áá 
$num
áá 
,
áá 
Ativo
ââ 
=
ââ 
true
ââ 
,
ââ 
}
ãã 
;
ãã 
var
åå 
repoMock
åå 
=
åå 
new
åå 
Mock
åå #
<
åå# $ 
IPessoaRepositorio
åå$ 6
>
åå6 7
(
åå7 8
)
åå8 9
;
åå9 :
var
ææ 
	repoMock2
ææ 
=
ææ 
new
ææ 
Mock
ææ  $
<
ææ$ % 
IMentorRepositorio
ææ% 7
>
ææ7 8
(
ææ8 9
)
ææ9 :
;
ææ: ;
var
çç 
_pessoaNegocio
çç 
=
çç  
new
çç! $
PessoaNegocio
çç% 2
(
çç2 3
repoMock
çç3 ;
.
çç; <
Object
çç< B
,
ççB C
	repoMock2
ççD M
.
ççM N
Object
ççN T
)
ççT U
;
ççU V
repoMock
èè 
.
èè 
Setup
èè 
(
èè 
mr
èè 
=>
èè  
mr
èè! #
.
èè# $#
AtivarDesativarPessoa
èè$ 9
(
èè9 :
pessoa
èè: @
.
èè@ A
Id
èèA C
,
èèC D
!
èèE F
pessoa
èèF L
.
èèL M
Ativo
èèM R
)
èèR S
)
èèS T
.
èèT U
Callback
èèU ]
(
èè] ^
(
èè^ _
int
èè_ b
Id
èèc e
,
èèe f
bool
èèg k
Ativo
èèl q
)
èèq r
=>
èès u
{
éé 
_pessoaNegocio
êê 
.
êê 
SelecionarPorId
êê .
(
êê. /
pessoa
êê/ 5
.
êê5 6
Id
êê6 8
)
êê8 9
;
êê9 :
}
ìì 
)
ìì 
.
ìì 

Verifiable
ìì 
(
ìì 
)
ìì 
;
ìì 
}
íí 	
[
ïï 	
Fact
ïï	 
]
ïï 
public
ðð 
void
ðð +
PessoaAtivarDesativarNotFound
ðð 1
(
ðð1 2
)
ðð2 3
{
ññ 	
var
óó 
pessoa
óó 
=
óó 
new
óó 
Pessoa
óó #
{
ôô 
Id
õõ 
=
õõ 
$num
õõ 
,
õõ 
Ativo
öö 
=
öö 
true
öö 
,
öö 
}
÷÷ 
;
÷÷ 
var
ùù 
repoMock
ùù 
=
ùù 
new
ùù 
Mock
ùù #
<
ùù# $ 
IPessoaRepositorio
ùù$ 6
>
ùù6 7
(
ùù7 8
)
ùù8 9
;
ùù9 :
var
úú 
	repoMock2
úú 
=
úú 
new
úú 
Mock
úú  $
<
úú$ % 
IMentorRepositorio
úú% 7
>
úú7 8
(
úú8 9
)
úú9 :
;
úú: ;
var
ûû 
_pessoaNegocio
ûû 
=
ûû  
new
ûû! $
PessoaNegocio
ûû% 2
(
ûû2 3
repoMock
ûû3 ;
.
ûû; <
Object
ûû< B
,
ûûB C
	repoMock2
ûûD M
.
ûûM N
Object
ûûN T
)
ûûT U
;
ûûU V
repoMock
üü 
.
üü 
Setup
üü 
(
üü 
mr
üü 
=>
üü  
mr
üü! #
.
üü# $#
AtivarDesativarPessoa
üü$ 9
(
üü9 :
pessoa
üü: @
.
üü@ A
Id
üüA C
,
üüC D
!
üüE F
pessoa
üüF L
.
üüL M
Ativo
üüM R
)
üüR S
)
üüS T
;
üüT U
Assert
ÿÿ 
.
ÿÿ 
Throws
ÿÿ 
<
ÿÿ $
NaoEncontradoException
ÿÿ 0
>
ÿÿ0 1
(
ÿÿ1 2
(
ÿÿ2 3
)
ÿÿ3 4
=>
ÿÿ5 7
_pessoaNegocio
ÿÿ8 F
.
ÿÿF G#
AtivarDesativarPessoa
ÿÿG \
(
ÿÿ\ ]
pessoa
ÿÿ] c
.
ÿÿc d
Id
ÿÿd f
)
ÿÿf g
)
ÿÿg h
;
ÿÿh i
}
 	
}
 
} Ú£
QC:\vicelulas\Back-end\Vicelulas\Vicelulas.Teste\NegocioTeste\SquadNegocioTeste.cs
	namespace 	
	Vicelulas
 
. 
Teste 
. 
NegocioTeste &
{ 
public 

class 
SquadNegocioTeste "
{ 
[ 	
Fact	 
] 
public 
void 
ListaDeSquadOK "
(" #
)# $
{ 	
var 
repoMock 
= 
new 
Mock #
<# $
ISquadRepositorio$ 5
>5 6
(6 7
)7 8
;8 9
repoMock 
. 
Setup 
( 
m 
=> 
m  !
.! "

Selecionar" ,
(, -
)- .
). /
./ 0
Returns0 7
(7 8
DbMock8 >
.> ?
Squad? D
)D E
;E F
var 
_squadNegocio 
= 
new  #
SquadNegocio$ 0
(0 1
repoMock1 9
.9 :
Object: @
)@ A
;A B
var 
objRetornado 
= 
_squadNegocio ,
., -

Selecionar- 7
(7 8
)8 9
;9 :
Assert!! 
.!! 
NotNull!! 
(!! 
objRetornado!! '
)!!' (
;!!( )
Assert"" 
."" 
Same"" 
("" 
DbMock"" 
."" 
Squad"" $
,""$ %
objRetornado""& 2
)""2 3
;""3 4
}$$ 	
[&& 	
Fact&&	 
]&& 
public'' 
void'' 
SquadPorIdOk''  
(''  !
)''! "
{(( 	
var** 
squad** 
=** 
new** 
SquadDto** $
{++ 
Id,, 
=,, 
$num,, 
,,, 
Id_Tribo-- 
=-- 
$num-- 
,-- 
Nome.. 
=.. 
$str.. #
,..# $
	NomeTribo// 
=// 
$str// &
,//& '
Ativo00 
=00 
true00 
}11 
;11 
var22 
repoMock22 
=22 
new22 
Mock22 #
<22# $
ISquadRepositorio22$ 5
>225 6
(226 7
)227 8
;228 9
repoMock33 
.33 
Setup33 
(33 
m33 
=>33 
m33  !
.33! "
SelecionarPorId33" 1
(331 2
squad332 7
.337 8
Id338 :
)33: ;
)33; <
.33< =
Returns33= D
(33D E
squad33E J
)33J K
;33K L
var55 
_squadNegocio55 
=55 
new55  #
SquadNegocio55$ 0
(550 1
repoMock551 9
.559 :
Object55: @
)55@ A
;55A B
var88 
objRetornado88 
=88 
_squadNegocio88 ,
.88, -
SelecionarPorId88- <
(88< =
squad88= B
.88B C
Id88C E
)88E F
;88F G
Assert;; 
.;; 
NotNull;; 
(;; 
objRetornado;; '
);;' (
;;;( )
Assert<< 
.<< 
Same<< 
(<< 
squad<< 
,<< 
objRetornado<< +
)<<+ ,
;<<, -
}== 	
[?? 	
Fact??	 
]?? 
public@@ 
void@@ 
SquadPorIdNotFound@@ &
(@@& '
)@@' (
{AA 	
intCC 
idCC 
=CC 
$numCC 
;CC 
varEE 
repoMockEE 
=EE 
newEE 
MockEE #
<EE# $
ISquadRepositorioEE$ 5
>EE5 6
(EE6 7
)EE7 8
;EE8 9
repoMockFF 
.FF 
SetupFF 
(FF 
mFF 
=>FF 
mFF  !
.FF! "
SelecionarPorIdFF" 1
(FF1 2
$numFF2 3
)FF3 4
)FF4 5
;FF5 6
varGG 
_squadNegocioGG 
=GG 
newGG  #
SquadNegocioGG$ 0
(GG0 1
repoMockGG1 9
.GG9 :
ObjectGG: @
)GG@ A
;GGA B
AssertJJ 
.JJ 
ThrowsJJ 
<JJ "
NaoEncontradoExceptionJJ 0
>JJ0 1
(JJ1 2
(JJ2 3
)JJ3 4
=>JJ5 7
_squadNegocioJJ8 E
.JJE F
SelecionarPorIdJJF U
(JJU V
idJJV X
)JJX Y
)JJY Z
;JJZ [
}KK 	
[NN 	
FactNN	 
]NN 
publicOO 
voidOO 
SquadPorNomeOKOO "
(OO" #
)OO# $
{PP 	
varRR 
nomeRR 
=RR 
$strRR 
;RR 
varTT 
repoMockTT 
=TT 
newTT 
MockTT #
<TT# $
ISquadRepositorioTT$ 5
>TT5 6
(TT6 7
)TT7 8
;TT8 9
repoMockUU 
.UU 
SetupUU 
(UU 
mUU 
=>UU 
mUU  !
.UU! "
SelecionarPorNomeUU" 3
(UU3 4
nomeUU4 8
)UU8 9
)UU9 :
.UU: ;
ReturnsUU; B
(UUB C
DbMockUUC I
.UUI J
SquadUUJ O
)UUO P
;UUP Q
varXX 
_squadNegocioXX 
=XX 
newXX  #
SquadNegocioXX$ 0
(XX0 1
repoMockXX1 9
.XX9 :
ObjectXX: @
)XX@ A
;XXA B
var[[ 
objRetornado[[ 
=[[ 
_squadNegocio[[ ,
.[[, -
SelecionarPorNome[[- >
([[> ?
nome[[? C
)[[C D
;[[D E
Assert^^ 
.^^ 
NotNull^^ 
(^^ 
objRetornado^^ '
)^^' (
;^^( )
}__ 	
[aa 	
Factaa	 
]aa 
publicbb 
voidbb 
SquadPorNomeNulobb $
(bb$ %
)bb% &
{cc 	
varee 
squadee 
=ee 
newee 
Squadee !
{ff 
Idgg 
=gg 
$numgg 
,gg 
Id_tribohh 
=hh 
$numhh 
,hh 
Nomeii 
=ii 
nullii 
,ii 
Ativojj 
=jj 
falsejj 
}kk 
;kk 
varmm 
repoMockmm 
=mm 
newmm 
Mockmm #
<mm# $
ISquadRepositoriomm$ 5
>mm5 6
(mm6 7
)mm7 8
;mm8 9
varoo 
	SquadNulloo 
=oo 
newoo 
SquadNegociooo  ,
(oo, -
repoMockoo- 5
.oo5 6
Objectoo6 <
)oo< =
;oo= >
Assertrr 
.rr 
Throwsrr 
<rr 
ConflitoExceptionrr +
>rr+ ,
(rr, -
(rr- .
)rr. /
=>rr0 2
	SquadNullrr3 <
.rr< =
Inserirrr= D
(rrD E
squadrrE J
)rrJ K
)rrK L
;rrL M
}ss 	
[uu 	
Factuu	 
]uu 
publicvv 
voidvv  
SquadPorNomeNotFoundvv (
(vv( )
)vv) *
{ww 	
varyy 
nomeyy 
=yy 
$stryy 
;yy 
var{{ 
repoMock{{ 
={{ 
new{{ 
Mock{{ #
<{{# $
ISquadRepositorio{{$ 5
>{{5 6
({{6 7
){{7 8
;{{8 9
repoMock|| 
.|| 
Setup|| 
(|| 
m|| 
=>|| 
m||  !
.||! "
SelecionarPorNome||" 3
(||3 4
nome||4 8
)||8 9
)||9 :
;||: ;
var 
_squadNegocio 
= 
new  #
SquadNegocio$ 0
(0 1
repoMock1 9
.9 :
Object: @
)@ A
;A B
Assert
 
.
 
Throws
 
<
 $
NaoEncontradoException
 0
>
0 1
(
1 2
(
2 3
)
3 4
=>
5 7
_squadNegocio
8 E
.
E F
SelecionarPorNome
F W
(
W X
nome
X \
)
\ ]
)
] ^
;
^ _
}
 	
[
 	
Fact
	 
]
 
public
 
void
 
SquadPorIdTriboOK
 %
(
% &
)
& '
{
 	
var
 
repoMock
 
=
 
new
 
Mock
 #
<
# $
ISquadRepositorio
$ 5
>
5 6
(
6 7
)
7 8
;
8 9
repoMock
 
.
 
Setup
 
(
 
m
 
=>
 
m
  !
.
! ""
SelecionarPorIdTribo
" 6
(
6 7
$num
7 8
)
8 9
)
9 :
.
: ;
Returns
; B
(
B C
DbMock
C I
.
I J
Squad
J O
)
O P
;
P Q
var
 
_squadNegocio
 
=
 
new
  #
SquadNegocio
$ 0
(
0 1
repoMock
1 9
.
9 :
Object
: @
)
@ A
;
A B
var
 
objRetornado
 
=
 
_squadNegocio
 ,
.
, -"
SelecionarPorIdTribo
- A
(
A B
$num
B C
)
C D
;
D E
Assert
 
.
 
NotNull
 
(
 
objRetornado
 '
)
' (
;
( )
}
 	
[
 	
Fact
	 
]
 
public
 
void
 %
SquadPorIdTriboNotFound
 +
(
+ ,
)
, -
{
 	
var
 
repoMock
 
=
 
new
 
Mock
 #
<
# $
ISquadRepositorio
$ 5
>
5 6
(
6 7
)
7 8
;
8 9
repoMock
 
.
 
Setup
 
(
 
m
 
=>
 
m
  !
.
! ""
SelecionarPorIdTribo
" 6
(
6 7
$num
7 8
)
8 9
)
9 :
;
: ;
var
 
_squadNegocio
 
=
 
new
  #
SquadNegocio
$ 0
(
0 1
repoMock
1 9
.
9 :
Object
: @
)
@ A
;
A B
Assert
   
.
   
Throws
   
<
   $
NaoEncontradoException
   0
>
  0 1
(
  1 2
(
  2 3
)
  3 4
=>
  5 7
_squadNegocio
  8 E
.
  E F"
SelecionarPorIdTribo
  F Z
(
  Z [
$num
  [ \
)
  \ ]
)
  ] ^
;
  ^ _
}
¡¡ 	
[
££ 	
Fact
££	 
]
££ 
public
¤¤ 
void
¤¤ 
SquadSemTriboOk
¤¤ #
(
¤¤# $
)
¤¤$ %
{
¥¥ 	
var
§§ 
repoMock
§§ 
=
§§ 
new
§§ 
Mock
§§ #
<
§§# $
ISquadRepositorio
§§$ 5
>
§§5 6
(
§§6 7
)
§§7 8
;
§§8 9
repoMock
¨¨ 
.
¨¨ 
Setup
¨¨ 
(
¨¨ 
m
¨¨ 
=>
¨¨ 
m
¨¨  !
.
¨¨! "&
SelecionarSquadsSemTribo
¨¨" :
(
¨¨: ;
)
¨¨; <
)
¨¨< =
.
¨¨= >
Returns
¨¨> E
(
¨¨E F
DbMock
¨¨F L
.
¨¨L M
Squad
¨¨M R
)
¨¨R S
;
¨¨S T
var
ªª 
_squadNegocio
ªª 
=
ªª 
new
ªª  #
SquadNegocio
ªª$ 0
(
ªª0 1
repoMock
ªª1 9
.
ªª9 :
Object
ªª: @
)
ªª@ A
;
ªªA B
var
­­ 
objRetornado
­­ 
=
­­ 
_squadNegocio
­­ ,
.
­­, -&
SelecionarSquadsSemTribo
­­- E
(
­­E F
)
­­F G
;
­­G H
Assert
°° 
.
°° 
Same
°° 
(
°° 
DbMock
°° 
.
°° 
Squad
°° $
,
°°$ %
objRetornado
°°& 2
)
°°2 3
;
°°3 4
}
±± 	
[
³³ 	
Fact
³³	 
]
³³ 
public
´´ 
void
´´ 
SquadInserirOk
´´ "
(
´´" #
)
´´# $
{
µµ 	
var
·· 
squad
·· 
=
·· 
new
·· 
Squad
·· !
{
¸¸ 
Id
¹¹ 
=
¹¹ 
$num
¹¹ 
,
¹¹ 
Id_tribo
ºº 
=
ºº 
$num
ºº 
,
ºº 
Nome
»» 
=
»» 
$str
»» 
,
»» 
Ativo
¼¼ 
=
¼¼ 
true
¼¼ 
,
¼¼ 
	Id_Mentor
½½ 
=
½½ 
$num
½½ 
,
½½ 
}
¾¾ 
;
¾¾ 
var
ÀÀ 
repoMock
ÀÀ 
=
ÀÀ 
new
ÀÀ 
Mock
ÀÀ #
<
ÀÀ# $
ISquadRepositorio
ÀÀ$ 5
>
ÀÀ5 6
(
ÀÀ6 7
)
ÀÀ7 8
;
ÀÀ8 9
repoMock
ÁÁ 
.
ÁÁ 
Setup
ÁÁ 
(
ÁÁ 
m
ÁÁ 
=>
ÁÁ 
m
ÁÁ  !
.
ÁÁ! "
Inserir
ÁÁ" )
(
ÁÁ) *
squad
ÁÁ* /
)
ÁÁ/ 0
)
ÁÁ0 1
.
ÁÁ1 2
Returns
ÁÁ2 9
(
ÁÁ9 :
squad
ÁÁ: ?
.
ÁÁ? @
Id
ÁÁ@ B
)
ÁÁB C
;
ÁÁC D
var
ÃÃ 
_squadNegocio
ÃÃ 
=
ÃÃ 
new
ÃÃ  #
SquadNegocio
ÃÃ$ 0
(
ÃÃ0 1
repoMock
ÃÃ1 9
.
ÃÃ9 :
Object
ÃÃ: @
)
ÃÃ@ A
;
ÃÃA B
var
ÆÆ 
objRetornado
ÆÆ 
=
ÆÆ 
_squadNegocio
ÆÆ ,
.
ÆÆ, -
Inserir
ÆÆ- 4
(
ÆÆ4 5
squad
ÆÆ5 :
)
ÆÆ: ;
;
ÆÆ; <
Assert
ÉÉ 
.
ÉÉ 
Equal
ÉÉ 
(
ÉÉ 
squad
ÉÉ 
.
ÉÉ 
Id
ÉÉ !
,
ÉÉ! "
objRetornado
ÉÉ# /
)
ÉÉ/ 0
;
ÉÉ0 1
}
ÊÊ 	
[
ÌÌ 	
Fact
ÌÌ	 
]
ÌÌ 
public
ÍÍ 
void
ÍÍ )
SquadInserirNomeNullOrEmpty
ÍÍ /
(
ÍÍ/ 0
)
ÍÍ0 1
{
ÎÎ 	
var
ÐÐ 
squad
ÐÐ 
=
ÐÐ 
new
ÐÐ 
Squad
ÐÐ !
{
ÑÑ 
Id
ÒÒ 
=
ÒÒ 
$num
ÒÒ 
,
ÒÒ 
Id_tribo
ÓÓ 
=
ÓÓ 
$num
ÓÓ 
,
ÓÓ 
Nome
ÔÔ 
=
ÔÔ 
null
ÔÔ 
,
ÔÔ 
Ativo
ÕÕ 
=
ÕÕ 
true
ÕÕ 
}
ÖÖ 
;
ÖÖ 
var
ØØ 
repoMock
ØØ 
=
ØØ 
new
ØØ 
Mock
ØØ #
<
ØØ# $
ISquadRepositorio
ØØ$ 5
>
ØØ5 6
(
ØØ6 7
)
ØØ7 8
;
ØØ8 9
repoMock
ÙÙ 
.
ÙÙ 
Setup
ÙÙ 
(
ÙÙ 
m
ÙÙ 
=>
ÙÙ 
m
ÙÙ  !
.
ÙÙ! "
Inserir
ÙÙ" )
(
ÙÙ) *
squad
ÙÙ* /
)
ÙÙ/ 0
)
ÙÙ0 1
;
ÙÙ1 2
var
ÛÛ 
_squadNegocio
ÛÛ 
=
ÛÛ 
new
ÛÛ  #
SquadNegocio
ÛÛ$ 0
(
ÛÛ0 1
repoMock
ÛÛ1 9
.
ÛÛ9 :
Object
ÛÛ: @
)
ÛÛ@ A
;
ÛÛA B
Assert
ÞÞ 
.
ÞÞ 
Throws
ÞÞ 
<
ÞÞ 
ConflitoException
ÞÞ +
>
ÞÞ+ ,
(
ÞÞ, -
(
ÞÞ- .
)
ÞÞ. /
=>
ÞÞ0 2
_squadNegocio
ÞÞ3 @
.
ÞÞ@ A
Inserir
ÞÞA H
(
ÞÞH I
squad
ÞÞI N
)
ÞÞN O
)
ÞÞO P
;
ÞÞP Q
}
ßß 	
[
áá 	
Fact
áá	 
]
áá 
public
ââ 
void
ââ '
SquadInserirNomeExistente
ââ -
(
ââ- .
)
ââ. /
{
ãã 	
var
åå 
squad1
åå 
=
åå 
new
åå 
Squad
åå "
{
ææ 
Id
çç 
=
çç 
$num
çç 
,
çç 
Id_tribo
èè 
=
èè 
$num
èè 
,
èè 
Nome
éé 
=
éé 
$str
éé 
,
éé 
Ativo
êê 
=
êê 
true
êê 
}
ëë 
;
ëë 
var
íí 
squad2
íí 
=
íí 
new
íí 
Squad
íí "
{
îî 
Id
ïï 
=
ïï 
$num
ïï 
,
ïï 
Id_tribo
ðð 
=
ðð 
$num
ðð 
,
ðð 
Nome
ññ 
=
ññ 
$str
ññ 
,
ññ 
Ativo
òò 
=
òò 
true
òò 
}
óó 
;
óó 
var
õõ 
repoMock
õõ 
=
õõ 
new
õõ 
Mock
õõ #
<
õõ# $
ISquadRepositorio
õõ$ 5
>
õõ5 6
(
õõ6 7
)
õõ7 8
;
õõ8 9
repoMock
öö 
.
öö 
Setup
öö 
(
öö 
m
öö 
=>
öö 
m
öö  !
.
öö! "
Inserir
öö" )
(
öö) *
squad1
öö* 0
)
öö0 1
)
öö1 2
;
öö2 3
repoMock
÷÷ 
.
÷÷ 
Setup
÷÷ 
(
÷÷ 
m
÷÷ 
=>
÷÷ 
m
÷÷  !
.
÷÷! "
Inserir
÷÷" )
(
÷÷) *
squad2
÷÷* 0
)
÷÷0 1
)
÷÷1 2
;
÷÷2 3
var
ùù 
_squadNegocio
ùù 
=
ùù 
new
ùù  #
SquadNegocio
ùù$ 0
(
ùù0 1
repoMock
ùù1 9
.
ùù9 :
Object
ùù: @
)
ùù@ A
;
ùùA B
_squadNegocio
üü 
.
üü 
Inserir
üü !
(
üü! "
squad1
üü" (
)
üü( )
;
üü) *
_squadNegocio
ýý 
.
ýý 
Inserir
ýý !
(
ýý! "
squad2
ýý" (
)
ýý( )
;
ýý) *
Assert
 
.
 
Throws
 
<
 
ConflitoException
 +
>
+ ,
(
, -
(
- .
)
. /
=>
0 2
_squadNegocio
3 @
.
@ A
Inserir
A H
(
H I
squad2
I O
)
O P
)
P Q
;
Q R
}
 	
[
 	
Fact
	 
]
 
public
 
void
 
SquadAlterarOK
 "
(
" #
)
# $
{
 	
var
 
squad
 
=
 
new
 
Squad
 !
{
 
Id
 
=
 
$num
 
,
 
Id_tribo
 
=
 
$num
 
,
 
Nome
 
=
 
$str
 
,
 
Ativo
 
=
 
true
 
}
 
;
 
var
 
repoMock
 
=
 
new
 
Mock
 #
<
# $
ISquadRepositorio
$ 5
>
5 6
(
6 7
)
7 8
;
8 9
repoMock
 
.
 
Setup
 
(
 
m
 
=>
 
m
  !
.
! "
Alterar
" )
(
) *
squad
* /
)
/ 0
)
0 1
;
1 2
var
 
_squadNegocio
 
=
 
new
  #
SquadNegocio
$ 0
(
0 1
repoMock
1 9
.
9 :
Object
: @
)
@ A
;
A B
var
 
objRetornado
 
=
 
_squadNegocio
 ,
.
, -
Alterar
- 4
(
4 5
squad
5 :
.
: ;
Id
; =
,
= >
squad
? D
)
D E
;
E F
Assert
 
.
 
NotNull
 
(
 
objRetornado
 '
)
' (
;
( )
}
 	
}
 
} Ü_
QC:\vicelulas\Back-end\Vicelulas\Vicelulas.Teste\NegocioTeste\TriboNegocioTeste.cs
	namespace

 	
	Vicelulas


 
.

 
Teste

 
.

 
NegocioTeste

 &
{ 
public 

class 
TriboNegocioTeste "
{ 
[ 	
Fact	 
] 
public 
void 
ListaDeTriboOK "
(" #
)# $
{ 	
var 
repoMock 
= 
new 
Mock #
<# $
ITriboRepositorio$ 5
>5 6
(6 7
)7 8
;8 9
repoMock 
. 
Setup 
( 
m 
=> 
m  !
.! "

Selecionar" ,
(, -
)- .
). /
./ 0
Returns0 7
(7 8
DbMock8 >
.> ?
Tribo? D
)D E
;E F
var 
_triboNegocio 
= 
new  #
TriboNegocio$ 0
(0 1
repoMock1 9
.9 :
Object: @
)@ A
;A B
var 
objRetornado 
= 
_triboNegocio ,
., -

Selecionar- 7
(7 8
)8 9
;9 :
Assert 
. 
NotNull 
( 
objRetornado '
)' (
;( )
Assert 
. 
Same 
( 
DbMock 
. 
Tribo $
,$ %
objRetornado& 2
)2 3
;3 4
} 	
[ 	
Fact	 
] 
public   
void   
TriboPorIdOk    
(    !
)  ! "
{!! 	
var## 
tribo## 
=## 
new## 
TriboDto## $
{$$ 
Id%% 
=%% 
$num%% 
,%% 
Nome&& 
=&& 
$str&& !
,&&! "

NomeMentor'' 
='' 
$str'' '
,''' (
IdMentor(( 
=(( 
$num(( 
,(( 
Ativo)) 
=)) 
true)) 
}** 
;** 
var++ 
repoMock++ 
=++ 
new++ 
Mock++ #
<++# $
ITriboRepositorio++$ 5
>++5 6
(++6 7
)++7 8
;++8 9
repoMock,, 
.,, 
Setup,, 
(,, 
m,, 
=>,, 
m,,  !
.,,! "
SelecionarPorId,," 1
(,,1 2
tribo,,2 7
.,,7 8
Id,,8 :
),,: ;
),,; <
.,,< =
Returns,,= D
(,,D E
tribo,,E J
),,J K
;,,K L
var.. 
_triboNegocio.. 
=.. 
new..  #
TriboNegocio..$ 0
(..0 1
repoMock..1 9
...9 :
Object..: @
)..@ A
;..A B
var11 
objRetornado11 
=11 
_triboNegocio11 ,
.11, -
SelecionarPorId11- <
(11< =
tribo11= B
.11B C
Id11C E
)11E F
;11F G
Assert44 
.44 
NotNull44 
(44 
objRetornado44 '
)44' (
;44( )
Assert55 
.55 
Same55 
(55 
tribo55 
,55 
objRetornado55 +
)55+ ,
;55, -
}66 	
[88 	
Fact88	 
]88 
public99 
void99 
TriboPorIdNotFound99 &
(99& '
)99' (
{:: 	
int<< 
id<< 
=<< 
$num<< 
;<< 
var>> 
repoMock>> 
=>> 
new>> 
Mock>> #
<>># $
ITriboRepositorio>>$ 5
>>>5 6
(>>6 7
)>>7 8
;>>8 9
repoMock?? 
.?? 
Setup?? 
(?? 
m?? 
=>?? 
m??  !
.??! "
SelecionarPorId??" 1
(??1 2
$num??2 3
)??3 4
)??4 5
;??5 6
var@@ 
_triboNegocio@@ 
=@@ 
new@@  #
TriboNegocio@@$ 0
(@@0 1
repoMock@@1 9
.@@9 :
Object@@: @
)@@@ A
;@@A B
AssertCC 
.CC 
ThrowsCC 
<CC "
NaoEncontradoExceptionCC 0
>CC0 1
(CC1 2
(CC2 3
)CC3 4
=>CC5 7
_triboNegocioCC8 E
.CCE F
SelecionarPorIdCCF U
(CCU V
idCCV X
)CCX Y
)CCY Z
;CCZ [
}DD 	
[FF 	
FactFF	 
]FF 
publicGG 
voidGG 
TriboPorNomeOKGG "
(GG" #
)GG# $
{HH 	
varJJ 
nomeJJ 
=JJ 
$strJJ #
;JJ# $
varLL 
repoMockLL 
=LL 
newLL 
MockLL #
<LL# $
ITriboRepositorioLL$ 5
>LL5 6
(LL6 7
)LL7 8
;LL8 9
repoMockMM 
.MM 
SetupMM 
(MM 
mMM 
=>MM 
mMM  !
.MM! "
SelecionarPorNomeMM" 3
(MM3 4
nomeMM4 8
)MM8 9
)MM9 :
.MM: ;
ReturnsMM; B
(MMB C
DbMockMMC I
.MMI J
TriboMMJ O
)MMO P
;MMP Q
varPP 
_triboNegocioPP 
=PP 
newPP  #
TriboNegocioPP$ 0
(PP0 1
repoMockPP1 9
.PP9 :
ObjectPP: @
)PP@ A
;PPA B
varSS 
objRetornadoSS 
=SS 
_triboNegocioSS ,
.SS, -
SelecionarPorNomeSS- >
(SS> ?
nomeSS? C
)SSC D
;SSD E
AssertVV 
.VV 
NotNullVV 
(VV 
objRetornadoVV '
)VV' (
;VV( )
}WW 	
[YY 	
FactYY	 
]YY 
publicZZ 
voidZZ 
TriboPorNomeNuloZZ $
(ZZ$ %
)ZZ% &
{[[ 	
var]] 
tribo]] 
=]] 
new]] 
Tribo]] !
{^^ 
Id__ 
=__ 
$num__ 
,__ 
	Id_Mentor`` 
=`` 
$num`` 
,`` 
Nomeaa 
=aa 
nullaa 
,aa 
Ativobb 
=bb 
falsebb 
}cc 
;cc 
varee 
repoMockee 
=ee 
newee 
Mockee #
<ee# $
ITriboRepositorioee$ 5
>ee5 6
(ee6 7
)ee7 8
;ee8 9
vargg 
	TriboNullgg 
=gg 
newgg 
TriboNegociogg  ,
(gg, -
repoMockgg- 5
.gg5 6
Objectgg6 <
)gg< =
;gg= >
Assertjj 
.jj 
Throwsjj 
<jj 
ConflitoExceptionjj +
>jj+ ,
(jj, -
(jj- .
)jj. /
=>jj0 2
	TriboNulljj3 <
.jj< =
Inserirjj= D
(jjD E
tribojjE J
)jjJ K
)jjK L
;jjL M
}kk 	
[mm 	
Factmm	 
]mm 
publicnn 
voidnn  
TriboPorNomeNotFoundnn (
(nn( )
)nn) *
{oo 	
varqq 
nomeqq 
=qq 
$strqq 
;qq 
varss 
repoMockss 
=ss 
newss 
Mockss #
<ss# $
ITriboRepositorioss$ 5
>ss5 6
(ss6 7
)ss7 8
;ss8 9
repoMocktt 
.tt 
Setuptt 
(tt 
mtt 
=>tt 
mtt  !
.tt! "
SelecionarPorNomett" 3
(tt3 4
nomett4 8
)tt8 9
)tt9 :
;tt: ;
varww 
_triboNegocioww 
=ww 
newww  #
TriboNegocioww$ 0
(ww0 1
repoMockww1 9
.ww9 :
Objectww: @
)ww@ A
;wwA B
Assert{{ 
.{{ 
Throws{{ 
<{{ "
NaoEncontradoException{{ 0
>{{0 1
({{1 2
({{2 3
){{3 4
=>{{5 7
_triboNegocio{{8 E
.{{E F
SelecionarPorNome{{F W
({{W X
nome{{X \
){{\ ]
){{] ^
;{{^ _
}|| 	
[~~ 	
Fact~~	 
]~~ 
public 
void 
TriboInserirOk "
(" #
)# $
{
 	
var
 
tribo
 
=
 
new
 
Tribo
 !
{
 
Id
 
=
 
$num
 
,
 
	Id_Mentor
 
=
 
$num
 
,
 
Nome
 
=
 
$str
 
,
 
Ativo
 
=
 
true
 
}
 
;
 
var
 
repoMock
 
=
 
new
 
Mock
 #
<
# $
ITriboRepositorio
$ 5
>
5 6
(
6 7
)
7 8
;
8 9
repoMock
 
.
 
Setup
 
(
 
m
 
=>
 
m
  !
.
! "
Inserir
" )
(
) *
tribo
* /
)
/ 0
)
0 1
.
1 2
Returns
2 9
(
9 :
tribo
: ?
.
? @
Id
@ B
)
B C
;
C D
var
 
_triboNegocio
 
=
 
new
  #
TriboNegocio
$ 0
(
0 1
repoMock
1 9
.
9 :
Object
: @
)
@ A
;
A B
var
 
objRetornado
 
=
 
_triboNegocio
 ,
.
, -
Inserir
- 4
(
4 5
tribo
5 :
)
: ;
;
; <
Assert
 
.
 
Equal
 
(
 
tribo
 
.
 
Id
 !
,
! "
objRetornado
# /
)
/ 0
;
0 1
}
 	
[
 	
Fact
	 
]
 
public
 
void
 )
TriboInserirNomeNullOrEmpty
 /
(
/ 0
)
0 1
{
 	
var
 
tribo
 
=
 
new
 
Tribo
 !
{
 
Id
 
=
 
$num
 
,
 
	Id_Mentor
 
=
 
$num
 
,
 
Nome
 
=
 
$str
 
,
 
Ativo
 
=
 
true
 
}
   
;
   
var
¢¢ 
repoMock
¢¢ 
=
¢¢ 
new
¢¢ 
Mock
¢¢ #
<
¢¢# $
ITriboRepositorio
¢¢$ 5
>
¢¢5 6
(
¢¢6 7
)
¢¢7 8
;
¢¢8 9
repoMock
££ 
.
££ 
Setup
££ 
(
££ 
m
££ 
=>
££ 
m
££  !
.
££! "
Inserir
££" )
(
££) *
tribo
££* /
)
££/ 0
)
££0 1
;
££1 2
var
¥¥ 
_triboNegocio
¥¥ 
=
¥¥ 
new
¥¥  #
TriboNegocio
¥¥$ 0
(
¥¥0 1
repoMock
¥¥1 9
.
¥¥9 :
Object
¥¥: @
)
¥¥@ A
;
¥¥A B
Assert
¨¨ 
.
¨¨ 
Throws
¨¨ 
<
¨¨ 
ConflitoException
¨¨ +
>
¨¨+ ,
(
¨¨, -
(
¨¨- .
)
¨¨. /
=>
¨¨0 2
_triboNegocio
¨¨3 @
.
¨¨@ A
Inserir
¨¨A H
(
¨¨H I
tribo
¨¨I N
)
¨¨N O
)
¨¨O P
;
¨¨P Q
}
©© 	
}
¬¬ 
}­­ Ð
SC:\vicelulas\Back-end\Vicelulas\Vicelulas.Teste\NegocioTeste\UnidadeNegocioTeste.cs
	namespace 	
	Vicelulas
 
. 
Teste 
. 
NegocioTeste &
{ 
public 

class 
UnidadeNegocioTeste $
{ 
[ 	
Fact	 
] 
public 
void 
ListaDeUnidadeOK $
($ %
)% &
{ 	
var 
repoMock 
= 
new 
Mock #
<# $
IUnidadeRepositorio$ 7
>7 8
(8 9
)9 :
;: ;
repoMock 
. 
Setup 
( 
m 
=> 
m  !
.! "

Selecionar" ,
(, -
)- .
). /
./ 0
Returns0 7
(7 8
DbMock8 >
.> ?
Unidade? F
)F G
;G H
var 
_unidadeNegocio 
=  !
new" %
UnidadeNegocio& 4
(4 5
repoMock5 =
.= >
Object> D
)D E
;E F
var 
objRetornado 
= 
_unidadeNegocio .
.. /

Selecionar/ 9
(9 :
): ;
;; <
Assert 
. 
NotNull 
( 
objRetornado '
)' (
;( )
Assert   
.   
Same   
(   
DbMock   
.   
Unidade   &
,  & '
objRetornado  ( 4
)  4 5
;  5 6
}!! 	
}"" 
}## 